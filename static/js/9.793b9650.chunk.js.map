{"version":3,"sources":["Common/components/Input/styledComponent.ts","Common/components/Input/Input.tsx","Common/components/WithLabel/styledComponents.tsx","Common/components/WithLabel/WithLabel.tsx","Common/components/WithLabel/index.tsx","Common/utils/ValidateFullname.ts","UserModule/components/common/BasicInfoForm/styledComponents.tsx","UserModule/styledComponents.tsx","Common/utils/validateFields.ts","Common/components/Card/styledComponents.tsx","Common/components/Card/Card.tsx","Common/components/DatePicker/styledComponents.tsx","Common/components/DatePicker/DatePicker.tsx","UserModule/components/common/BasicInfoForm/BasicInfoForm.tsx","UserModule/components/common/BasicInfoForm/index.ts","Common/components/Counter/styledComponents.tsx","Common/components/Counter/Counter.tsx","Common/components/Counter/constants.ts","Common/constants/ButtonTypes.ts","Common/components/Counter/index.tsx","Common/components/Select/styledComponent.tsx","Common/components/Select/Select.tsx","Common/components/Select/index.tsx","UserModule/components/RequestAssetTransportPage/RequestAssetTransportPage.tsx","UserModule/routes/RequestAssetTransportRoute/RequestAssetTransportRoute.tsx","UserModule/routes/RequestAssetTransportRoute/index.ts"],"names":["ErrorView","css","COLORS","neonRed","neonRed5","InputElement","styled","input","props","isError","InputElementWrapper","div","ErrorMsgSpan","span","Input","observer","onChange","event","value","target","shouldShowErrorMessage","errorMessage","t","onBlur","validateForm","this","testid","placeHolder","className","inputStyles","inputRef","showMsg","ref","placeholder","data-testid","Component","defaultProps","observable","withTranslation","withRef","WithLableWrapper","WithLeftLableWrapper","Label","Required","WithLabel","renderUI","LableStyle","labelStyle","isLeft","label","isRequired","children","ValidateFullname","FormTitle","Typo20DarkBlueGreyHKGrotestBold","cardStyles","darkBlueGrey16","lightBlueGrey","white","InputLable","Typo12SteelHKGroteskSemiBold","ButtonStyles","brightBlue","TextTypo","Typo14WhiteHKGroteskSemiBold","PageWrapper","LableTypo","validateFields","details","count","Object","values","forEach","CardWrapper","Card","Wrapper","DatePicker","selectedDate","handleChange","date","minDate","showError","showTimeSelect","placeholderText","dateFormat","selected","BasicInfoForm","React","createRef","formTitle","buttonText","isFlexible","fromDateTime","toDateTime","onChangeFromPlace","onChangeToPlace","handleIsFlexible","onSelectFromDateTime","onSelectToDateTime","onClick","apiStatus","Date","CheckBox","handleCheck","labelTypo","Button","disabled","text","textTypo","buttonStyles","loadingStatus","API_FETCHING","CounterWrapper","CountOperand","Typo16SteelHKGroteskRegular","CountValue","Counter","onIncrement","onDecrement","type","selectStyles","styles","control","base","state","border","boxShadow","Select","renderOptions","options","map","option","renderValue","selectedValue","onSlectOption","isDisabled","isMulti","length","defaultValue","RequestAssetTransportPage","init","fromPlace","toPlace","noOfAssests","assetType","otherAssetType","isAssetTypeOther","assetSensitivity","whomToDeliver","checked","onIncrementAssestNo","onDecrementAssestNo","handleAssetType","handleOtherAssetType","handleSensitivity","onChangewhomToDeliver","rideRequestObject","onClickRequest","MainPageLayout","src","RequestAssetTransportRoute","inject","getLetsRideInfoStore","a","formsInfo","AddAsserTransportRequestInfo","history","goToHomePage","getAddAsserTransportRequestAPIStatus","withRouter"],"mappings":"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","file":"static/js/9.793b9650.chunk.js","sourcesContent":["import styled from '@emotion/styled'\nimport tw from 'tailwind.macro'\nimport { css } from '@emotion/core'\nimport { COLORS } from '../../themes/Colors'\n\ninterface InputElementProps {\n  css: any\n  isError: any\n}\nconst ErrorView = css`\n  border: solid 1px ${COLORS.neonRed};\n  background-color: ${COLORS.neonRed5};\n`\n\nconst InputElement = styled.input`\n  ${tw`outline-none`}\n  padding-left:5px;\n  ${(props: InputElementProps) => props.css}\n  ${(props: InputElementProps) => (props.isError ? ErrorView : '')}\n`\nconst InputElementWrapper = styled.div`\n  ${tw`flex flex-col mt-2`}\n`\nconst ErrorMsgSpan = styled.span`\n  ${tw`mt-1`}\n  height:14px;\n  color: red;\n  font-size: 10px;\n`\n\nexport { InputElement, InputElementWrapper, ErrorMsgSpan }\n","import React, { Component } from 'react'\n\nimport {\n  InputElement,\n  InputElementWrapper,\n  ErrorMsgSpan\n} from './styledComponent'\n\nimport { observer } from 'mobx-react'\n\nimport { observable } from 'mobx'\nimport { WithTranslation, withTranslation } from 'react-i18next'\nexport interface validateFormReturnType {\n  shouldShowErrorMessage: boolean\n  errorMessage: string\n}\n\ninterface InputProps extends WithTranslation {\n  onChange: (value: string) => void\n  validateForm: (value: string) => validateFormReturnType\n  placeHolder?: string\n  testid?: string\n  className?: string\n  onBlur?: (value: string) => void\n  inputStyles?: any\n  inputRef?: any\n  showMsg?: boolean\n  isError?: boolean\n}\n@observer\nclass Input extends Component<InputProps> {\n  @observable value\n  @observable shouldShowErrorMessage\n  @observable errorMessage\n  static defaultProps = {\n    onChange: () => {},\n    inputStyles: '',\n    showMsg: true\n  }\n  onChange = event => {\n    this.value = event.target.value\n    const isEmpty = this.value ? false : true\n    if (isEmpty) {\n      this.shouldShowErrorMessage = true\n      this.errorMessage = this.props.t('common:requiredMsg')\n    } else {\n      this.shouldShowErrorMessage = false\n      this.errorMessage = ''\n    }\n    this.props.onChange(this.value)\n  }\n  onBlur = event => {\n    const { shouldShowErrorMessage, errorMessage } = this.props.validateForm(\n      this.value\n    )\n    this.shouldShowErrorMessage = shouldShowErrorMessage\n    this.errorMessage = errorMessage\n  }\n  render() {\n    const {\n      testid,\n      placeHolder,\n      className,\n      inputStyles,\n      inputRef,\n      showMsg,\n      isError\n    } = this.props\n    return (\n      <InputElementWrapper>\n        <InputElement\n          ref={inputRef}\n          value={this.value}\n          onChange={this.onChange}\n          placeholder={placeHolder}\n          className={className}\n          data-testid={testid}\n          onBlur={this.onBlur}\n          css={inputStyles}\n          isError={\n            (this.shouldShowErrorMessage && showMsg) || (isError && !this.value)\n          }\n        />\n        <ErrorMsgSpan>\n          {isError\n            ? !this.value && 'Required'\n            : this.shouldShowErrorMessage && showMsg && this.errorMessage}\n        </ErrorMsgSpan>\n      </InputElementWrapper>\n    )\n  }\n}\nexport default withTranslation('translation', { withRef: true })(Input)\n","import styled from '@emotion/styled'\nimport tw from 'tailwind.macro'\ninterface LabelProps {\n  css: boolean\n}\nexport const WithLableWrapper = styled.div`\n  ${tw`flex flex-col pt-1 pb-1`}\n  width:100%;\n`\nexport const WithLeftLableWrapper = styled.div`\n  ${tw`flex items-center`}\n  margin-top: ${(props: LabelProps) => (props.css ? '8px' : '0px')};\n  margin-bottom: ${(props: LabelProps) => (props.css ? '8px' : '0px')};\n  \n`\n\nexport const Label = styled.div`\n  margin-right: ${(props: LabelProps) => (props.css ? '20px' : '0px')};\n`\nexport const Required = styled.div`\n  color: red;\n`\n","import React, { Component } from 'react'\nimport {\n  WithLableWrapper,\n  Label,\n  Required,\n  WithLeftLableWrapper\n} from './styledComponents'\n\ninterface WithLabelProps {\n  labelStyle: Function\n  label: string\n  isRequired: boolean\n  isLeft: boolean\n}\nclass WithLabel extends Component<WithLabelProps> {\n  static defaultProps = {\n    isLeft: false\n  }\n  renderUI = () => {\n    const { labelStyle: LableStyle, isLeft, label, isRequired } = this.props\n    return (\n      <Label css={isLeft}>\n        <LableStyle>\n          {label}\n          {isRequired ? <Required>{' *'}</Required> : ''}\n        </LableStyle>\n      </Label>\n    )\n  }\n  render() {\n    const { children, isLeft } = this.props\n    if (!isLeft) {\n      return (\n        <WithLableWrapper>\n          {this.renderUI()}\n          {children}\n        </WithLableWrapper>\n      )\n    }\n    return (\n      <WithLeftLableWrapper css={isLeft}>\n        {this.renderUI()}\n        {children}\n      </WithLeftLableWrapper>\n    )\n  }\n}\n\nexport { WithLabel }\n","export { WithLabel } from './WithLabel'\n","import { validateFormReturnType } from '../components/Input/Input'\n\nexport function ValidateFullname(value: string): validateFormReturnType {\n  let shouldShowErrorMessage, errorMessage\n  const isEmpty = value ? false : true\n  if (isEmpty) {\n    shouldShowErrorMessage = true\n    errorMessage = 'Required'\n  }\n  return { shouldShowErrorMessage, errorMessage }\n}\n","import styled from '@emotion/styled'\nimport tw from 'tailwind.macro'\nimport { css } from '@emotion/core'\nimport { COLORS } from '../../../../Common/themes/Colors'\nimport {\n  Typo14WhiteHKGroteskSemiBold,\n  Typo12SteelHKGroteskSemiBold,\n  Typo20DarkBlueGreyHKGrotestBold\n} from '../../../../Common/styleGuide/Typos'\n\nexport const FormTitle = styled(Typo20DarkBlueGreyHKGrotestBold)`\n  align-self: center;\n  ${tw`pb-4`}\n`\nexport const cardStyles = css`\n  border-radius: 6px;\n  box-shadow: 0 4px 40px 0 ${COLORS.darkBlueGrey16};\n  border: solid 1px ${COLORS.lightBlueGrey};\n  background-color: ${COLORS.white};\n`\nexport const inputStyles = css`\n  width: 401px;\n  height: 40px;\n  border-radius: 2px;\n  border: solid 1px ${COLORS.lightBlueGrey};\n  background-color: ${COLORS.white};\n`\nexport const InputLable = styled(Typo12SteelHKGroteskSemiBold)`\n  ${tw`flex `}\n`\nexport const ButtonStyles = css`\n  width: 399px;\n  height: 40px;\n  border-radius: 4px;\n  background-color: ${COLORS.brightBlue};\n`\nexport const TextTypo = styled(Typo14WhiteHKGroteskSemiBold)``\n\nexport const ToFromDateTimeWrapper = styled.div`\n  ${tw`flex flex-row `}\n`\n","import styled from '@emotion/styled'\nimport tw from 'tailwind.macro'\n\nimport { Typo12SteelHKGroteskSemiBold } from '../Common/styleGuide/Typos'\nexport const PageWrapper = styled.div`\n  ${tw`flex flex-col items-center justify-center pt-24 pb-24`}\n  flex-grow:1;\n  width: 100%;\n`\nexport const LableTypo = styled(Typo12SteelHKGroteskSemiBold)`\n  ${tw`flex `}\n`\n","export const validateFields = (details: object, isError: boolean) => {\n  let count = 0;\n  Object.values(details).forEach(value => {\n    if (!value) {\n      count++;\n      isError = true\n    }\n  })\n  if (count > 0)\n    return isError\n  else return false\n}\n","import styled from '@emotion/styled'\nimport tw from 'tailwind.macro'\nimport { COLORS } from '../../themes/Colors'\n\ninterface CardWrapperProps {\n  css: any\n}\nexport const CardWrapper = styled.div`\n   ${tw`flex flex-col items-start justify-start p-16`}\n  background-color: ${COLORS.white};\n  padding: 15;\n  ${(props: CardWrapperProps) => props.css}\n`\n","import React, { Component } from 'react'\nimport { CardWrapper } from './styledComponents'\n\ninterface CardProps {\n  cardStyles: any\n}\nclass Card extends Component<CardProps> {\n  render() {\n    const { cardStyles } = this.props\n    return <CardWrapper css={cardStyles}>{this.props.children}</CardWrapper>\n  }\n}\n\nexport { Card }\n","import styled from '@emotion/styled'\nimport tw from 'tailwind.macro'\nimport { css } from '@emotion/core'\nexport const ErrorMsgSpan = styled.span`\n  ${tw`mt-1`}\n  height:10px;\n  color: red;\n  font-size: 10px;\n`\nexport const Wrapper = styled.div`\n  ${tw`flex flex-col mt-2`}\n`\n","import React, { Component } from 'react'\nimport 'react-datepicker/dist/react-datepicker.css'\nimport { observer } from 'mobx-react'\nimport ReactDatePicker from 'react-datepicker'\nimport './index.css'\nimport { observable } from 'mobx'\nimport { ErrorMsgSpan, Wrapper } from './styledComponents'\nimport { WithTranslation, withTranslation } from 'react-i18next'\ninterface DatePickerProps extends WithTranslation {\n  placeHolder: string\n  minDate?: Date\n  selectedDate: object\n  handleChange: (date: object) => void\n  showError?: boolean\n  isError?: boolean\n}\n@observer\nclass DatePicker extends Component<DatePickerProps> {\n  @observable shouldShowErrorMessage = false\n  @observable errorMessage\n  static defaultProps = {\n    showError: true\n  }\n  onBlur = () => {\n    const { selectedDate } = this.props\n    if (!selectedDate) {\n      this.shouldShowErrorMessage = true\n      this.errorMessage = this.props.t('common:requiredMsg')\n    } else {\n      this.shouldShowErrorMessage = false\n      this.errorMessage = ''\n    }\n  }\n  handleChange = date => {\n    this.props.handleChange(date)\n    this.shouldShowErrorMessage = false\n  }\n  render() {\n    const {\n      selectedDate,\n      placeHolder,\n      minDate,\n      showError,\n      isError\n    } = this.props\n    return (\n      <Wrapper>\n        <ReactDatePicker\n          onChange={this.handleChange}\n          onBlur={this.onBlur}\n          showTimeSelect\n          placeholderText={placeHolder}\n          minDate={minDate}\n          dateFormat='Pp'\n          selected={selectedDate}\n        />\n        <ErrorMsgSpan>\n          {isError\n            ? !selectedDate && 'Required'\n            : this.shouldShowErrorMessage && showError && this.errorMessage}\n        </ErrorMsgSpan>\n      </Wrapper>\n    )\n  }\n}\n\n//date formate-----> Wed Jul 29 2020 11:20:34 GMT+0530 (India Standard Time)\n\n// handleChange = date => {\n//    console.log(date)\n//  }\n\nexport default withTranslation('translation', { withRef: true })(DatePicker)\n","import React, { Component, Children } from 'react'\nimport { withTranslation, WithTranslation } from 'react-i18next'\n\nimport { Card } from '../../../../Common/components/Card'\nimport { Button } from '../../../../Common/components/Button'\n\nimport { WithLabel } from '../../../../Common/components/WithLabel'\nimport { Input } from '../../../../Common/components/Input'\nimport { ValidateFullname } from '../../../../Common/utils/ValidateFullname'\nimport { CheckBox } from '../../../../Common/components/CheckBox'\n\nimport {\n  cardStyles,\n  ButtonStyles,\n  TextTypo,\n  inputStyles,\n  InputLable,\n  FormTitle\n} from './styledComponents'\nimport { DatePicker } from '../../../../Common/components/DatePicker'\nimport { observer } from 'mobx-react'\nimport { observable } from 'mobx'\nimport { API_FAILED, APIStatus, API_FETCHING } from '@ib/api-constants'\ninterface BasicInfoFormProps extends WithTranslation {\n  formTitle: string\n  buttonText: string\n  isFlexible: boolean\n  fromDateTime: object\n  toDateTime: object\n  onChangeFromPlace: (value: string) => void\n  onChangeToPlace: (value: string) => void\n  handleIsFlexible: (event) => void\n  onSelectFromDateTime: (date: object) => void\n  onSelectToDateTime: (date: object) => void\n  onClick: () => void\n  isError?: boolean\n  apiStatus?: APIStatus\n}\n\n@observer\nclass BasicInfoForm extends Component<BasicInfoFormProps> {\n  @observable inputRef\n  constructor(props) {\n    super(props)\n    this.inputRef = React.createRef()\n  }\n  componentDidMount() {\n    // this.inputRef.current.focus()\n  }\n  render() {\n    const {\n      t,\n      formTitle,\n      buttonText,\n      children,\n      isFlexible,\n      fromDateTime,\n      toDateTime,\n      onChangeFromPlace,\n      onChangeToPlace,\n      handleIsFlexible,\n      onSelectFromDateTime,\n      onSelectToDateTime,\n      onClick,\n      isError,\n      apiStatus\n    } = this.props\n    return (\n      <Card cardStyles={cardStyles}>\n        <FormTitle>{formTitle}</FormTitle>\n        <WithLabel\n          labelStyle={InputLable}\n          label={t('letsride:from')}\n          isRequired={true}\n        >\n          <Input\n            placeHolder={t('letsride:placePlaceHolder')}\n            onChange={onChangeFromPlace}\n            validateForm={ValidateFullname}\n            inputStyles={inputStyles}\n            isError={isError}\n            inputRef={this.inputRef}\n          />\n        </WithLabel>\n        <WithLabel\n          labelStyle={InputLable}\n          label={t('letsride:to')}\n          isRequired={true}\n        >\n          <Input\n            placeHolder={t('letsride:placePlaceHolder')}\n            onChange={onChangeToPlace}\n            validateForm={ValidateFullname}\n            inputStyles={inputStyles}\n            isError={isError}\n          />\n        </WithLabel>\n\n        <WithLabel\n          labelStyle={InputLable}\n          label={isFlexible ? t('letsride:from') : t('letsride:dateAndTime')}\n          isRequired={true}\n        >\n          <DatePicker\n            placeHolder={\n              isFlexible ? t('letsride:select') : t('letsride:selectDateTime')\n            }\n            minDate={new Date()}\n            handleChange={onSelectFromDateTime}\n            selectedDate={fromDateTime}\n            isError={isError}\n          />\n        </WithLabel>\n        {isFlexible && (\n          <WithLabel\n            labelStyle={InputLable}\n            label={t('letsride:to')}\n            isRequired={false}\n          >\n            <DatePicker\n              placeHolder={t('letsride:select')}\n              minDate={new Date()}\n              handleChange={onSelectToDateTime}\n              selectedDate={toDateTime}\n              showError={false}\n            />\n          </WithLabel>\n        )}\n        <CheckBox\n          handleCheck={handleIsFlexible}\n          labelTypo={InputLable}\n          label={t('letsride:flexibleTimings')}\n        />\n        {children}\n        <Button\n          disabled={false}\n          onClick={onClick}\n          text={buttonText}\n          textTypo={TextTypo}\n          buttonStyles={ButtonStyles}\n          loadingStatus={apiStatus === API_FETCHING ? true : false}\n        />\n      </Card>\n    )\n  }\n}\n\nexport default withTranslation('translation', { withRef: true })(BasicInfoForm)\n","export { default as BasicInfoForm } from './BasicInfoForm'\n","import styled from '@emotion/styled'\nimport {\n  Typo14SteelHKGroteskRegular,\n  Typo16SteelHKGroteskRegular\n} from '../../styleGuide/Typos'\nimport { css } from '@emotion/core'\nimport { COLORS } from '../../themes/Colors'\n\nexport const CounterWrapper = styled.div``\n\nexport const CountOperand = styled(Typo16SteelHKGroteskRegular)``\n\nexport const CountValue = styled(Typo16SteelHKGroteskRegular)``\n\nexport const buttonStyles = css`\n  width: 40px;\n  height: 40px;\n  border: solid 1px ${COLORS.lightBlueGrey};\n  background-color: ${COLORS.white};\n`\n","import React, { Component } from 'react'\nimport {\n  CounterWrapper,\n  CountOperand,\n  buttonStyles,\n  CountValue\n} from './styledComponents'\nimport { Button } from '../Button'\nimport { OUTLINE } from '../../constants/ButtonTypes'\nimport { ICREMENT, DECREMENT } from './constants'\n\ninterface CounterProps {\n  onIncrement: (value: any) => void\n  onDecrement: (value: any) => void\n  count: number\n}\nclass Counter extends Component<CounterProps> {\n  render() {\n    const { onIncrement, onDecrement, count } = this.props\n    return (\n      <CounterWrapper>\n        <Button\n          disabled={false}\n          onClick={onDecrement}\n          text={DECREMENT}\n          textTypo={CountOperand}\n          buttonStyles={buttonStyles}\n          loadingStatus={false}\n        />\n        <Button\n          disabled={true}\n          onClick={() => {}}\n          text={count}\n          textTypo={CountValue}\n          buttonStyles={buttonStyles}\n          loadingStatus={false}\n        />\n        <Button\n          type={OUTLINE}\n          disabled={false}\n          onClick={onIncrement}\n          text={ICREMENT}\n          textTypo={CountOperand}\n          buttonStyles={buttonStyles}\n          loadingStatus={false}\n        />\n      </CounterWrapper>\n    )\n  }\n}\n\nexport { Counter }\n","export const ICREMENT = '+'\nexport const DECREMENT = '-'\n","export const OUTLINE = 'OUTLINE'\nexport const FILLED = 'FILLED'\n","export { Counter } from './Counter'\n","import styled from '@emotion/styled'\nimport tw from 'tailwind.macro'\nimport { css } from '@emotion/core'\n\nexport const selectStyles = css`\n  ${tw`outline-none`}\n  width: 20%;\n`\nexport const ErrorMsgSpan = styled.span`\n  ${tw`mt-1`}\n  height:10px;\n  color: red;\n  font-size: 10px;\n`\nexport const Wrapper = styled.div`\n  ${tw`flex flex-col mt-2`}\n`\n","import React, { Component } from 'react'\nimport './index.css'\nimport ReactSelect from 'react-select'\nimport { selectStyles, Wrapper, ErrorMsgSpan } from './styledComponent'\nimport { observable } from 'mobx'\nimport { observer } from 'mobx-react'\n\nconst styles = {\n  control: (base, state) => ({\n    ...base,\n    border: '1px solid #d7dfe9',\n    boxShadow: '1px solid #d7dfe9',\n    '&:hover': {\n      border: '1px solid #d7dfe9'\n    }\n  })\n}\ninterface SelectProps {\n  onSlectOption: (value: string) => void\n  options: Array<string>\n  value?: string\n  isDisabled?: boolean\n  isMulti?: boolean\n  className?: string\n  placeholder?: string\n  showError?: boolean\n  isError?: boolean\n}\n@observer\nclass Select extends Component<SelectProps> {\n  @observable shouldShowErrorMessage = false\n  @observable selectedValue\n  static defaultProps = {\n    showError: true\n  }\n  renderOptions = options => {\n    let optionsList = [...options]\n    return optionsList.map(option => {\n      return { value: option, label: option }\n    })\n  }\n  renderValue = value => {\n    if (typeof value !== 'string') {\n      return value\n    } else {\n      return { value: value, label: value }\n    }\n  }\n  onBlur = event => {\n    if (this.selectedValue) {\n      this.shouldShowErrorMessage = false\n    } else {\n      this.shouldShowErrorMessage = true\n    }\n  }\n  onChange = event => {\n    this.shouldShowErrorMessage = false\n    this.selectedValue = event.value\n    const { onSlectOption } = this.props\n    onSlectOption(event)\n  }\n  render() {\n    const {\n      onSlectOption,\n      options,\n      value,\n      isDisabled,\n      isMulti,\n      className,\n      placeholder,\n      showError,\n      isError\n    } = this.props\n\n    return (\n      <Wrapper>\n        <ReactSelect\n          isDisabled={isDisabled}\n          className={className ? className : 'styles-select'}\n          css={selectStyles}\n          styles={styles}\n          options={options.length > 0 ? this.renderOptions(options) : []}\n          onChange={this.onChange}\n          onBlur={this.onBlur}\n          defaultValue={this.renderValue(value)}\n          isMulti={isMulti}\n          placeholder={placeholder}\n        />\n        <ErrorMsgSpan>\n          {isError && !this.selectedValue && 'Required'}\n          {showError && this.shouldShowErrorMessage && 'Required'}\n        </ErrorMsgSpan>\n      </Wrapper>\n    )\n  }\n}\nexport { Select }\n","export { Select } from './Select'\n","import React, { Component } from 'react'\nimport { MainPageLayout } from '../../../Common/components/MainPageLayout'\nimport { WithTranslation, withTranslation } from 'react-i18next'\nimport { BasicInfoForm } from '../common/BasicInfoForm'\nimport { PageWrapper, LableTypo } from '../../styledComponents'\nimport { observable, values } from 'mobx'\nimport { observer } from 'mobx-react'\nimport { WithLabel } from '../../../Common/components/WithLabel'\nimport { Select } from '../../../Common/components/Select'\nimport Input from '../../../Common/components/Input/Input'\nimport { ValidateFullname } from '../../../Common/utils/ValidateFullname'\nimport { inputStyles } from '../common/BasicInfoForm/styledComponents'\nimport { Counter } from '../../../Common/components/Counter'\nimport { validateFields } from '../../../Common/utils/validateFields'\nimport { APIStatus } from '@ib/api-constants'\nconst imgSrc =\n  'https://cdn.zeplin.io/5d0afc9102b7fa56760995cc/assets/c2438b2e-3c57-45cc-a4e7-10c2b3eec159.svg'\n\ninterface RequestAssetTransportPageProps extends WithTranslation {\n  onClickRequest: (details: object) => void\n  apiStatus: APIStatus\n}\n@observer\nclass RequestAssetTransportPage extends Component<\n  RequestAssetTransportPageProps\n> {\n  @observable fromPlace!: string\n  @observable toPlace!: string\n  @observable isFlexible!: boolean\n  @observable fromDateTime!: object\n  @observable toDateTime!: Object\n  @observable noOfAssests!: number\n  @observable assetType!: string\n  @observable otherAssetType!: string\n  @observable isAssetTypeOther!: boolean\n  @observable assetSensitivity!: string\n  @observable whomToDeliver!: string\n  @observable isError: boolean = false\n  constructor(props) {\n    super(props)\n    this.noOfAssests = 0\n    // this.init()\n  }\n  init = () => {\n    this.fromPlace = ''\n    this.toPlace = ''\n    this.isFlexible = false\n    this.noOfAssests = 0\n    this.assetType = ''\n    this.otherAssetType = ''\n    this.isAssetTypeOther = false\n    this.assetSensitivity = ''\n    this.whomToDeliver = ''\n  }\n  onChangeFromPlace = value => {\n    this.fromPlace = value\n  }\n  onChangeToPlace = value => {\n    this.toPlace = value\n  }\n  handleIsFlexible = event => {\n    this.isFlexible = event.target.checked\n  }\n  onSelectFromDateTime = date => {\n    this.fromDateTime = date\n  }\n  onSelectToDateTime = date => {\n    this.toDateTime = date\n  }\n  onIncrementAssestNo = () => {\n    this.noOfAssests++\n  }\n  onDecrementAssestNo = () => {\n    this.noOfAssests > 0 && this.noOfAssests--\n  }\n  handleAssetType = event => {\n    this.assetType = event.value\n    if (this.assetType === 'Others') {\n      this.isAssetTypeOther = true\n    } else {\n      this.isAssetTypeOther = false\n    }\n  }\n  handleOtherAssetType = value => {\n    this.otherAssetType = value\n  }\n  handleSensitivity = event => {\n    this.assetSensitivity = event.value\n  }\n  onChangewhomToDeliver = value => {\n    this.whomToDeliver = value\n  }\n  onClick = () => {\n    const rideRequestObject = {\n      fromPlace: this.fromPlace,\n      toPlace: this.toPlace,\n      fromDateTime: `${this.fromDateTime}`,\n      assetType: this.assetType,\n      assetSensitivity: this.assetSensitivity,\n      whomToDeliver: this.whomToDeliver\n    }\n    this.isError = validateFields(rideRequestObject, this.isError)\n    rideRequestObject[`isFlexible`] = this.isFlexible\n    rideRequestObject[`toDateTime`] = `${this.toDateTime}`\n    rideRequestObject[`noOfAssests`] = `${this.noOfAssests}`\n    rideRequestObject[`isAssetTypeOther`] = `${this.isAssetTypeOther}`\n    rideRequestObject[`otherAssetType`] = `${this.otherAssetType}`\n    if (!this.isError) {\n      this.props.onClickRequest(rideRequestObject)\n    }\n  }\n  render() {\n    const { t, onClickRequest, apiStatus } = this.props\n    return (\n      <MainPageLayout src={imgSrc}>\n        <PageWrapper>\n          <BasicInfoForm\n            formTitle={t('letsride:assetTransportRequest')}\n            buttonText={t('letsride:requestLable')}\n            isFlexible={this.isFlexible}\n            fromDateTime={this.fromDateTime}\n            toDateTime={this.toDateTime}\n            onChangeFromPlace={this.onChangeFromPlace}\n            onChangeToPlace={this.onChangeToPlace}\n            handleIsFlexible={this.handleIsFlexible}\n            onSelectFromDateTime={this.onSelectFromDateTime}\n            onSelectToDateTime={this.onSelectToDateTime}\n            onClick={this.onClick}\n            isError={this.isError}\n            apiStatus={apiStatus}\n          >\n            <WithLabel\n              labelStyle={LableTypo}\n              label={t(`letsride:noOfAssets`)}\n              isRequired={true}\n              isLeft={true}\n            >\n              <Counter\n                onIncrement={this.onIncrementAssestNo}\n                onDecrement={this.onDecrementAssestNo}\n                count={this.noOfAssests}\n              />\n            </WithLabel>\n            <WithLabel\n              labelStyle={LableTypo}\n              label={t('letsride:assetType')}\n              isRequired={true}\n            >\n              <Select\n                placeholder={t('letsride:selectAssetType')}\n                onSlectOption={this.handleAssetType}\n                options={[\n                  t('letsride:parcel'),\n                  t('letsride:bags'),\n                  t('letsride:others')\n                ]}\n                isError={this.isError}\n              />\n            </WithLabel>\n            {this.isAssetTypeOther && (\n              <WithLabel\n                labelStyle={LableTypo}\n                label={t('letsride:assetTypeOther')}\n                isRequired={false}\n              >\n                <Input\n                  placeHolder={t('letsride:otherAssets')}\n                  onChange={this.handleOtherAssetType}\n                  validateForm={ValidateFullname}\n                  inputStyles={inputStyles}\n                  showMsg={false}\n                  isError={this.isError}\n                />\n              </WithLabel>\n            )}\n            <WithLabel\n              labelStyle={LableTypo}\n              label={t('letsride:assetSensitivity')}\n              isRequired={true}\n            >\n              <Select\n                onSlectOption={this.handleSensitivity}\n                options={[\n                  t('letsride:higlySensitive'),\n                  t('letsride:sensitive'),\n                  t('letsride:normal')\n                ]}\n                placeholder={t('letsride:selectSensitivity')}\n                isError={this.isError}\n              />\n            </WithLabel>\n            <WithLabel\n              labelStyle={LableTypo}\n              label={t('letsride:whomToDeliver')}\n              isRequired={true}\n            >\n              <Input\n                placeHolder={t('letsride:nameAndMobileNumber')}\n                onChange={this.onChangewhomToDeliver}\n                validateForm={ValidateFullname}\n                inputStyles={inputStyles}\n                isError={this.isError}\n              />\n            </WithLabel>\n          </BasicInfoForm>\n        </PageWrapper>\n      </MainPageLayout>\n    )\n  }\n}\n\nexport default withTranslation('translation', { withRef: true })(\n  RequestAssetTransportPage\n)\n","import React, { Component } from 'react'\nimport { RouteComponentProps, withRouter } from 'react-router-dom'\nimport { WithTranslation, withTranslation } from 'react-i18next'\nimport { RequestAssetTransportPage } from '../../components/RequestAssetTransportPage'\nimport { goToHomePage } from '../../utils/NavigationUtils'\nimport { inject, observer } from 'mobx-react'\n\ninterface RequestAssetTransportRouteProps\n  extends RouteComponentProps,\n    WithTranslation {}\n\n@inject('letsRideInfoStore')\n@observer\nclass RequestAssetTransportRoute extends Component<\n  RequestAssetTransportRouteProps\n> {\n  getLetsRideInfoStore = () => {\n    return this.props['letsRideInfoStore']\n  }\n  onClickRequest = async details => {\n    await this.getLetsRideInfoStore().formsInfo.AddAsserTransportRequestInfo(\n      details\n    )\n    const { history } = this.props\n    goToHomePage(history)\n  }\n  render() {\n    return (\n      <RequestAssetTransportPage\n        onClickRequest={this.onClickRequest}\n        apiStatus={\n          this.getLetsRideInfoStore().formsInfo\n            .getAddAsserTransportRequestAPIStatus\n        }\n      />\n    )\n  }\n}\nexport default withTranslation('translation', { withRef: true })(\n  withRouter(RequestAssetTransportRoute)\n)\n","import RequestAssetTransportRoute from './RequestAssetTransportRoute'\nexport default RequestAssetTransportRoute\n"],"sourceRoot":""}