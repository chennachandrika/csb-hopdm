{"version":3,"sources":["Common/utils/StorageUtils.ts","Common/components/SvgWrapper/index.js","UserModule/constants/NavigationConstants.ts","Common/components/Icons/ReactLogo/SvgFile.js","Common/components/Icons/ReactLogo/index.js","Common/routes/HomeRoute/index.tsx","Common/i18n/index.tsx","Common/components/ProtectedRoute/ProtectedRoute.tsx","UserModule/routes/index.tsx","UserModule/stores/models/FormsInfoModel/FormsInfoModel.ts","Common/stores/PaginationStore/PaginationStore.ts","UserModule/stores/models/ResultITemModel/ResultITemModel.tsx","UserModule/stores/LetsRideInfoStore/LetsRideInfoStore.ts","Common/utils/TestUtils.ts","UserModule/services/LetsRideService/LetsRideService.fixture.ts","Common/stores/index.ts","App.tsx","Common/constants/NavigationConstants.ts","index.tsx"],"names":["getAccessToken","key","Cookie","get","setAccessToken","accessToken","value","set","expires","path","SvgWrapper","this","props","RenderComponent","renderComponent","other","Component","LETSRIDE_ROUTE_PATH","REQUEST_RIDE_ROUTE_PATH","REQUEST_ASSET_TRANSPORT_ROUTE_PATH","SHARE_RIDE_ROUTE_PATH","SHARE_TRAVEL_INFO_ROUTE_PATH","ReactLogo","className","xmlns","viewBox","fill","d","cx","cy","r","SvgFile","HomeRoute","goToHomePage","history","push","href","target","rel","to","onClick","withTranslation","withRef","withRouter","i18n","use","Backend","initReactI18next","init","fallbackLng","backend","loadPath","ns","defaultNS","react","useSuspense","wait","err","console","log","loadNamespaces","ProtectedRoute","renderedComponent","exact","component","pathname","React","RideInfoMainRoute","lazy","RequestRideRoute","RequestAssetTransportRoute","ShareRideRoute","ShareTravelInfoRoute","userRoutes","FormsInfoModel","action","bound","letsRideService","apiStatus","getAddRideRequestAPIStatus","error","getAddRideRequestAPIError","info","basicInfo","getCommonInfo","seats","quantity","number_of_seats","luggage_quantity","requestObject","getRideRequestInfo","AddRideRequestInfoPromise","AddRideRequestAPI","bindPromiseWithOnSuccess","setAddRideRequestAPIStatus","catch","setAddRideRequestAPIError","getAddAsserTransportRequestAPIStatus","getAddAsserTransportRequestAPIError","noOfAssests","assetType","isAssetTypeOther","otherAssetType","assetSensitivity","whomToDeliver","number_of_assets","asset_type","is_asset_type_other","other_asset_type","asset_sensitivity","whom_to_deliver","AsserTransportRequestInfo","AddAsserTransportRequestInfoPromise","AddAsserTransportRequestAPI","setAddAsserTransportRequestAPIStatus","setAddAsserTransportRequestAPIError","getAddShareRideAPIStatus","getAddShareRideAPIError","getShareRideInfo","AddShareRideInfoPromise","AddShareRideAPI","setAddShareRideAPIStatus","setAddShareRideAPIError","getAddShareTravelInfoAPIStatus","getAddShareTravelInfoAPIError","getShareTravelInfo","AddShareTravelInfoPromise","AddShareTravelInfoAPI","setAddShareTravelInfoAPIStatus","setAddShareTravelInfoAPIError","observable","API_INITIAL","from_place","fromPlace","to_place","toPlace","is_flexible","isFlexible","from_date_time","fromDateTime","to_date_time","toDateTime","noOfSeats","laguageQuantity","number_of_seats_available","assets_quantity","travelMedium","assetQuantity","travel_medium","PaginationStore","service","limit","entityModel","offset","getEntitiesListAPIError","getEntitiesListAPIStatus","entitiesList","currentPage","totalPages","response","totalCount","total_count","Math","ceil","data","map","item","details","promise","setGetEntitiesListAPIStatus","setEntitiesListResponse","setGetEntitiesListAPIError","parseInt","getEntitiesList","ResultITemModel","ResultItem","id","acceptedPersonDetails","luggageQuantity","numberOfAssets","status","updateRideRequestStatus","isStatusPending","random","name","accepted_person_details","mobileNumber","mobile_number","is_status_pending","LetsRideInfoStore","formsInfo","rideMatchingResultsInfo","GetRideMatchingResults","assetMatchingResultsInfo","GetAssetMatchingResults","myRideRequestsInfo","GetMyRideRequests","myAssetRequestsInfo","GetMyAssetRequests","sharedRideInfo","GetSharedRideDetails","sharedTravelInfo","GetSharedTravelInfo","a","resolveWithTimeout","timeOut","process","IS_JEST","Promise","resolve","setTimeout","GetPaginateData","fixtureData","slice","splice","letsRideInfoStore","getRideMatchingResultsResponse","getAssetMatchingResultsResponse","getMyRideRequestsResponse","getMyAssetRequestsResponse","getSharedRideDetailsResponse","getSharedTravelInfoResponse","App","stores","I18nextProvider","fallback","basename","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0b64cc25.chunk.js","sourcesContent":["import Cookie from 'js-cookie'\n\nexport const ACCESS_TOKEN = 'dG6EABne5a'\n\nexport function getCookie(key): string {\n  return Cookie.get(key)\n}\n\nfunction setCookie(key, value): void {\n  Cookie.set(key, value, {\n    expires: 30,\n    path: '/'\n  })\n}\n\nexport function getAccessToken(): string {\n  return getCookie(ACCESS_TOKEN)\n}\nexport function setAccessToken(accessToken): void {\n  setCookie(ACCESS_TOKEN, accessToken)\n}\n\nexport function clearUserSession(): void {\n  Cookie.remove(ACCESS_TOKEN, { path: '/' })\n}\n","import React, { Component } from 'react'\n\nclass SvgWrapper extends Component {\n  render() {\n    const { renderComponent: RenderComponent, ...other } = this.props\n    return <RenderComponent {...other} />\n  }\n}\n\nexport default SvgWrapper\n","export const LETSRIDE_ROUTE_PATH = '/letsride/home'\nexport const REQUEST_RIDE_ROUTE_PATH = '/letsride/request-ride'\nexport const REQUEST_ASSET_TRANSPORT_ROUTE_PATH =\n  '/letsride/request-asset-transport'\nexport const SHARE_RIDE_ROUTE_PATH = '/letsride/share-ride'\nexport const SHARE_TRAVEL_INFO_ROUTE_PATH = '/letsride/share-travel-info'\n","import React, { Component } from 'react'\n\nclass ReactLogo extends Component {\n  render() {\n    const { className } = this.props\n    return (\n      <svg\n        xmlns='http://www.w3.org/2000/svg'\n        viewBox='0 0 841.9 595.3'\n        className={className}\n      >\n        <g fill='#61DAFB'>\n          <path d='M666.3 296.5c0-32.5-40.7-63.3-103.1-82.4 14.4-63.6 8-114.2-20.2-130.4-6.5-3.8-14.1-5.6-22.4-5.6v22.3c4.6 0 8.3.9 11.4 2.6 13.6 7.8 19.5 37.5 14.9 75.7-1.1 9.4-2.9 19.3-5.1 29.4-19.6-4.8-41-8.5-63.5-10.9-13.5-18.5-27.5-35.3-41.6-50 32.6-30.3 63.2-46.9 84-46.9V78c-27.5 0-63.5 19.6-99.9 53.6-36.4-33.8-72.4-53.2-99.9-53.2v22.3c20.7 0 51.4 16.5 84 46.6-14 14.7-28 31.4-41.3 49.9-22.6 2.4-44 6.1-63.6 11-2.3-10-4-19.7-5.2-29-4.7-38.2 1.1-67.9 14.6-75.8 3-1.8 6.9-2.6 11.5-2.6V78.5c-8.4 0-16 1.8-22.6 5.6-28.1 16.2-34.4 66.7-19.9 130.1-62.2 19.2-102.7 49.9-102.7 82.3 0 32.5 40.7 63.3 103.1 82.4-14.4 63.6-8 114.2 20.2 130.4 6.5 3.8 14.1 5.6 22.5 5.6 27.5 0 63.5-19.6 99.9-53.6 36.4 33.8 72.4 53.2 99.9 53.2 8.4 0 16-1.8 22.6-5.6 28.1-16.2 34.4-66.7 19.9-130.1 62-19.1 102.5-49.9 102.5-82.3zm-130.2-66.7c-3.7 12.9-8.3 26.2-13.5 39.5-4.1-8-8.4-16-13.1-24-4.6-8-9.5-15.8-14.4-23.4 14.2 2.1 27.9 4.7 41 7.9zm-45.8 106.5c-7.8 13.5-15.8 26.3-24.1 38.2-14.9 1.3-30 2-45.2 2-15.1 0-30.2-.7-45-1.9-8.3-11.9-16.4-24.6-24.2-38-7.6-13.1-14.5-26.4-20.8-39.8 6.2-13.4 13.2-26.8 20.7-39.9 7.8-13.5 15.8-26.3 24.1-38.2 14.9-1.3 30-2 45.2-2 15.1 0 30.2.7 45 1.9 8.3 11.9 16.4 24.6 24.2 38 7.6 13.1 14.5 26.4 20.8 39.8-6.3 13.4-13.2 26.8-20.7 39.9zm32.3-13c5.4 13.4 10 26.8 13.8 39.8-13.1 3.2-26.9 5.9-41.2 8 4.9-7.7 9.8-15.6 14.4-23.7 4.6-8 8.9-16.1 13-24.1zM421.2 430c-9.3-9.6-18.6-20.3-27.8-32 9 .4 18.2.7 27.5.7 9.4 0 18.7-.2 27.8-.7-9 11.7-18.3 22.4-27.5 32zm-74.4-58.9c-14.2-2.1-27.9-4.7-41-7.9 3.7-12.9 8.3-26.2 13.5-39.5 4.1 8 8.4 16 13.1 24 4.7 8 9.5 15.8 14.4 23.4zM420.7 163c9.3 9.6 18.6 20.3 27.8 32-9-.4-18.2-.7-27.5-.7-9.4 0-18.7.2-27.8.7 9-11.7 18.3-22.4 27.5-32zm-74 58.9c-4.9 7.7-9.8 15.6-14.4 23.7-4.6 8-8.9 16-13 24-5.4-13.4-10-26.8-13.8-39.8 13.1-3.1 26.9-5.8 41.2-7.9zm-90.5 125.2c-35.4-15.1-58.3-34.9-58.3-50.6 0-15.7 22.9-35.6 58.3-50.6 8.6-3.7 18-7 27.7-10.1 5.7 19.6 13.2 40 22.5 60.9-9.2 20.8-16.6 41.1-22.2 60.6-9.9-3.1-19.3-6.5-28-10.2zM310 490c-13.6-7.8-19.5-37.5-14.9-75.7 1.1-9.4 2.9-19.3 5.1-29.4 19.6 4.8 41 8.5 63.5 10.9 13.5 18.5 27.5 35.3 41.6 50-32.6 30.3-63.2 46.9-84 46.9-4.5-.1-8.3-1-11.3-2.7zm237.2-76.2c4.7 38.2-1.1 67.9-14.6 75.8-3 1.8-6.9 2.6-11.5 2.6-20.7 0-51.4-16.5-84-46.6 14-14.7 28-31.4 41.3-49.9 22.6-2.4 44-6.1 63.6-11 2.3 10.1 4.1 19.8 5.2 29.1zm38.5-66.7c-8.6 3.7-18 7-27.7 10.1-5.7-19.6-13.2-40-22.5-60.9 9.2-20.8 16.6-41.1 22.2-60.6 9.9 3.1 19.3 6.5 28.1 10.2 35.4 15.1 58.3 34.9 58.3 50.6-.1 15.7-23 35.6-58.4 50.6zM320.8 78.4z' />\n          <circle cx='420.9' cy='296.5' r='45.7' />\n          <path d='M520.5 78.1z' />\n        </g>\n      </svg>\n    )\n  }\n}\n\nexport default ReactLogo\n","import React, { Component } from 'react'\nimport SvgWrapper from '../../SvgWrapper'\nimport SvgFile from './SvgFile'\n\nclass ReactLogo extends Component {\n  render() {\n    return <SvgWrapper renderComponent={SvgFile} {...this.props} />\n  }\n}\n\nexport default ReactLogo\n","import React, { Component } from 'react'\nimport { Link, withRouter, RouteComponentProps } from 'react-router-dom'\n\nimport ReactLogo from '../../components/Icons/ReactLogo'\nimport { LETSRIDE_ROUTE_PATH } from '../../../UserModule/constants/NavigationConstants'\nimport { withTranslation, WithTranslation } from 'react-i18next'\nimport './index.css'\n\ninterface HomeRouteProps extends RouteComponentProps, WithTranslation {}\ninterface InjectedProps extends HomeRouteProps {}\n\nclass HomeRoute extends Component<HomeRouteProps> {\n  goToHomePage = () => {\n    const { history } = this.props\n    history.push(LETSRIDE_ROUTE_PATH)\n  }\n  render() {\n    return (\n      <div className='app'>\n        <header className='bg-indigo-900 app-header'>\n          <ReactLogo className='app-logo' />\n          <p>\n            Edit <code>src/App.js</code> and save to reload.\n          </p>\n          <a\n            className='app-link'\n            href='https://reactjs.org'\n            target='_blank'\n            rel='noopener noreferrer'\n          >\n            Learn React\n          </a>\n          <Link to={LETSRIDE_ROUTE_PATH} onClick={this.goToHomePage}>\n            Let's Ride\n          </Link>\n        </header>\n      </div>\n    )\n  }\n}\n\nexport default withTranslation('translation', { withRef: true })(\n  withRouter(HomeRoute)\n)\n","import i18n from 'i18next'\nimport Backend from 'i18next-xhr-backend'\nimport { initReactI18next } from 'react-i18next'\n\nconst fallbackLng = ['en']\n\ni18n\n  .use(Backend)\n  .use(initReactI18next)\n  .init(\n    {\n      fallbackLng,\n      backend: {\n        loadPath: '/i18n/translations/{{lng}}/{{ns}}.json'\n      },\n      ns: ['common'],\n      defaultNS: 'common',\n      react: {\n        useSuspense: true,\n        wait: true\n      }\n    },\n    err => {\n      if (err) {\n        console.log('I18n init error', err)\n      }\n    }\n  )\n\ni18n.loadNamespaces(['common', 'todos', 'letsride'], err => {\n  if (err) {\n    console.log('I18n loadNamespaces error', err)\n  }\n})\n\nexport default i18n\n","import React from 'react'\nimport { Redirect, Route } from 'react-router-dom'\nimport { getAccessToken, setAccessToken } from '../../utils/StorageUtils'\n\ninterface ProtectedRouteProps {\n  path: string\n  renderedComponent: any\n}\n\nclass ProtectedRoute extends React.Component<ProtectedRouteProps> {\n  constructor(props) {\n    super(props)\n  }\n\n  render() {\n    const { path, renderedComponent: Component } = this.props\n    setAccessToken('abc')\n    if (getAccessToken()) {\n      return <Route exact path={path} component={Component} />\n    }\n    return (\n      <Redirect\n        to={{\n          pathname: '/signin'\n        }}\n      />\n    )\n  }\n}\nexport { ProtectedRoute }\n","import React, { lazy } from 'react'\n\nimport { ProtectedRoute } from '../../Common/components/ProtectedRoute/ProtectedRoute'\n\nimport {\n  LETSRIDE_ROUTE_PATH,\n  REQUEST_RIDE_ROUTE_PATH,\n  REQUEST_ASSET_TRANSPORT_ROUTE_PATH,\n  SHARE_TRAVEL_INFO_ROUTE_PATH,\n  SHARE_RIDE_ROUTE_PATH\n} from '../constants/NavigationConstants'\n\nconst RideInfoMainRoute = lazy(() => import('./RideInfoMainRoute'))\nconst RequestRideRoute = lazy(() => import('./RequestRideRoute'))\nconst RequestAssetTransportRoute = lazy(() =>\n  import('./RequestAssetTransportRoute')\n)\nconst ShareRideRoute = lazy(() => import('./ShareRideRoute'))\nconst ShareTravelInfoRoute = lazy(() => import('./ShareTravelInfoRoute'))\n\nexport const userRoutes = [\n  <ProtectedRoute\n    key={LETSRIDE_ROUTE_PATH}\n    path={LETSRIDE_ROUTE_PATH}\n    renderedComponent={RideInfoMainRoute}\n  />,\n  <ProtectedRoute\n    key={REQUEST_RIDE_ROUTE_PATH}\n    path={REQUEST_RIDE_ROUTE_PATH}\n    renderedComponent={RequestRideRoute}\n  />,\n  <ProtectedRoute\n    key={REQUEST_ASSET_TRANSPORT_ROUTE_PATH}\n    path={REQUEST_ASSET_TRANSPORT_ROUTE_PATH}\n    renderedComponent={RequestAssetTransportRoute}\n  />,\n  <ProtectedRoute\n    key={SHARE_RIDE_ROUTE_PATH}\n    path={SHARE_RIDE_ROUTE_PATH}\n    renderedComponent={ShareRideRoute}\n  />,\n  <ProtectedRoute\n    key={SHARE_TRAVEL_INFO_ROUTE_PATH}\n    path={SHARE_TRAVEL_INFO_ROUTE_PATH}\n    renderedComponent={ShareTravelInfoRoute}\n  />\n]\n","import LetsRideService from '../../../services/LetsRideService'\nimport { action, observable } from 'mobx'\nimport { APIStatus, API_INITIAL } from '@ib/api-constants'\nimport { bindPromiseWithOnSuccess } from '@ib/mobx-promise'\nimport { getUserDisplayableErrorMessage } from '../../../../Common/utils/APIUtils'\nimport { format } from 'date-fns'\nclass FormsInfoModel {\n  letsRideService: LetsRideService\n\n  @observable getAddRideRequestAPIStatus!: APIStatus\n  @observable getAddRideRequestAPIError!: null | Error\n\n  @observable getAddAsserTransportRequestAPIStatus!: APIStatus\n  @observable getAddAsserTransportRequestAPIError!: null | Error\n\n  @observable getAddShareRideAPIStatus!: APIStatus\n  @observable getAddShareRideAPIError!: null | Error\n\n  @observable getAddShareTravelInfoAPIStatus!: APIStatus\n  @observable getAddShareTravelInfoAPIError!: null | Error\n\n  constructor(letsRideService: LetsRideService) {\n    this.letsRideService = letsRideService\n    this.init()\n  }\n  @action.bound\n  init = () => {\n    this.getAddRideRequestAPIStatus = API_INITIAL\n    this.getAddRideRequestAPIError = null\n\n    this.getAddAsserTransportRequestAPIStatus = API_INITIAL\n    this.getAddAsserTransportRequestAPIError = null\n\n    this.getAddShareRideAPIStatus = API_INITIAL\n    this.getAddShareRideAPIError = null\n\n    this.getAddShareTravelInfoAPIStatus = API_INITIAL\n    this.getAddShareTravelInfoAPIError = null\n  }\n\n  @action.bound\n  getCommonInfo = info => {\n    const { fromPlace, toPlace, isFlexible, fromDateTime, toDateTime } = info\n    return {\n      from_place: fromPlace,\n      to_place: toPlace,\n      is_flexible: isFlexible,\n      from_date_time: fromDateTime,\n      to_date_time: toDateTime\n    }\n  }\n\n  @action.bound\n  setAddRideRequestAPIStatus(apiStatus) {\n    this.getAddRideRequestAPIStatus = apiStatus\n    console.log('Status', this.getAddRideRequestAPIStatus)\n  }\n  @action.bound\n  setAddRideRequestAPIError(error) {\n    this.getAddRideRequestAPIError = error\n  }\n  @action.bound\n  getRideRequestInfo(info) {\n    console.log('ride Request')\n\n    const basicInfo = this.getCommonInfo(info)\n    const { seats, quantity } = info\n    console.log({\n      ...basicInfo,\n      number_of_seats: seats,\n      luggage_quantity: quantity\n    })\n    return {\n      ...basicInfo,\n      number_of_seats: seats,\n      luggage_quantity: quantity\n    }\n  }\n  @action.bound\n  AddRideRequestInfo(info) {\n    const requestObject = this.getRideRequestInfo(info)\n    const AddRideRequestInfoPromise = this.letsRideService.AddRideRequestAPI(\n      requestObject\n    )\n    return bindPromiseWithOnSuccess(AddRideRequestInfoPromise)\n      .to(this.setAddRideRequestAPIStatus, () => ({}))\n      .catch(this.setAddRideRequestAPIError)\n  }\n\n  @action.bound\n  setAddAsserTransportRequestAPIStatus(apiStatus) {\n    this.getAddAsserTransportRequestAPIStatus = apiStatus\n  }\n  @action.bound\n  setAddAsserTransportRequestAPIError(error) {\n    this.getAddAsserTransportRequestAPIError = error\n  }\n  @action.bound\n  AsserTransportRequestInfo(info) {\n    const basicInfo = this.getCommonInfo(info)\n    const {\n      noOfAssests,\n      assetType,\n      isAssetTypeOther,\n      otherAssetType,\n      assetSensitivity,\n      whomToDeliver\n    } = info\n    return {\n      ...basicInfo,\n      number_of_assets: noOfAssests,\n      asset_type: assetType,\n      is_asset_type_other: isAssetTypeOther,\n      other_asset_type: otherAssetType,\n      asset_sensitivity: assetSensitivity,\n      whom_to_deliver: whomToDeliver\n    }\n  }\n  @action.bound\n  AddAsserTransportRequestInfo(info) {\n    const requestObject = this.AsserTransportRequestInfo(info)\n    const AddAsserTransportRequestInfoPromise = this.letsRideService.AddAsserTransportRequestAPI(\n      requestObject\n    )\n    return bindPromiseWithOnSuccess(AddAsserTransportRequestInfoPromise)\n      .to(this.setAddAsserTransportRequestAPIStatus, () => ({}))\n      .catch(this.setAddAsserTransportRequestAPIError)\n  }\n\n  @action.bound\n  setAddShareRideAPIStatus(apiStatus) {\n    this.getAddShareRideAPIStatus = apiStatus\n  }\n  @action.bound\n  setAddShareRideAPIError(error) {\n    this.getAddShareRideAPIError = error\n  }\n  @action.bound\n  getShareRideInfo = info => {\n    const basicInfo = this.getCommonInfo(info)\n    const { noOfSeats, laguageQuantity } = info\n    return {\n      ...basicInfo,\n      number_of_seats_available: noOfSeats,\n      assets_quantity: laguageQuantity\n    }\n  }\n  @action.bound\n  AddShareRideInfo(info) {\n    const requestObject = this.getShareRideInfo(info)\n    const AddShareRideInfoPromise = this.letsRideService.AddShareRideAPI(\n      requestObject\n    )\n    return bindPromiseWithOnSuccess(AddShareRideInfoPromise)\n      .to(this.setAddShareRideAPIStatus, () => ({}))\n      .catch(this.setAddShareRideAPIError)\n  }\n\n  @action.bound\n  setAddShareTravelInfoAPIStatus(apiStatus) {\n    this.getAddShareTravelInfoAPIStatus = apiStatus\n  }\n  @action.bound\n  setAddShareTravelInfoAPIError(error) {\n    this.getAddShareTravelInfoAPIError = error\n  }\n  @action.bound\n  getShareTravelInfo = info => {\n    const basicInfo = this.getCommonInfo(info)\n    const { travelMedium, assetQuantity } = info\n    return {\n      ...basicInfo,\n      travel_medium: travelMedium,\n      assets_quantity: assetQuantity\n    }\n  }\n  @action.bound\n  AddShareTravelInfo(info) {\n    const requestObject = this.getShareTravelInfo(info)\n    const AddShareTravelInfoPromise = this.letsRideService.AddShareTravelInfoAPI(\n      requestObject\n    )\n    return bindPromiseWithOnSuccess(AddShareTravelInfoPromise)\n      .to(this.setAddShareTravelInfoAPIStatus, () => ({}))\n      .catch(this.setAddShareTravelInfoAPIError)\n  }\n}\nexport { FormsInfoModel }\n","import { observable, action, computed } from 'mobx'\nimport { bindPromiseWithOnSuccess } from '@ib/mobx-promise'\nimport { API_INITIAL } from '@ib/api-constants'\n\nclass PaginationStore {\n  offset\n  limit\n  service\n  entityModel\n  @observable currentPage\n  @observable getEntitiesListAPIStatus\n  @observable getEntitiesListAPIError\n  @observable entitiesList\n  @observable totalPages\n  @observable details\n  @observable totalCount\n  constructor(service, limit, entityModel) {\n    this.limit = limit\n    this.service = service\n    this.entityModel = entityModel\n    this.init()\n  }\n  @action.bound\n  init() {\n    this.offset = 0\n    this.getEntitiesListAPIError = null\n    this.getEntitiesListAPIStatus = API_INITIAL\n    this.entitiesList = []\n    this.currentPage = 1\n    this.totalPages = 0\n  }\n  @action.bound\n  setGetEntitiesListAPIStatus(apiStatus) {\n\n\n    this.getEntitiesListAPIStatus = apiStatus\n  }\n  @action.bound\n  setGetEntitiesListAPIError(error) {\n\n    this.getEntitiesListAPIError = error\n  }\n  @action.bound\n  setEntitiesListResponse(response) {\n    const { entityModel } = this\n    if (this.totalPages < this.currentPage) {\n      this.currentPage = 1\n    }\n    this.totalCount = response.total_count\n    this.totalPages = Math.ceil(response.total_count / this.limit)\n    this.entitiesList = response.data.map(item => new entityModel(item))\n  }\n  @action.bound\n  getEntitiesList(details) {\n    this.details = details\n    let offset = Math.ceil(this.limit * (this.currentPage - 1))\n\n    const promise = this.service(this.limit, offset, details)\n    return bindPromiseWithOnSuccess(promise)\n      .to(this.setGetEntitiesListAPIStatus, this.setEntitiesListResponse)\n      .catch(this.setGetEntitiesListAPIError)\n  }\n  @action.bound\n  pagination(value) {\n    this.currentPage = parseInt(value)\n\n    this.getEntitiesList(this.details)\n  }\n}\nexport { PaginationStore }\n","import { observable } from 'mobx'\nimport {\n  RidesMatchingResultObject,\n  AssestMatchingResultObject\n} from '../../types'\n\nclass ResultITemModel {\n  id: number\n  fromPlace: string\n  toPlace: string\n  isFlexible: boolean\n  fromDateTime: string\n  toDateTime: string\n  acceptedPersonDetails: { name: string; mobileNumber: number }\n  noOfSeats: number\n  luggageQuantity: number\n  numberOfAssets: number\n  assetType: string\n  assetSensitivity\n  whomToDeliver\n  assetQuantity\n  travelMedium\n  status!: string\n  @observable isStatusPending: boolean\n  constructor(ResultItem: any) {\n    // console.log(ResultItem)\n    console.log(ResultItem)\n\n    this.id = ResultItem.id ? ResultItem.id : Math.random()\n    this.fromPlace = ResultItem.from_place\n    this.toPlace = ResultItem.to_place\n    this.isFlexible = ResultItem.is_flexible\n    this.fromDateTime = ResultItem.from_date_time\n    this.toDateTime = ResultItem.to_date_time\n    this.acceptedPersonDetails = {\n      name: ResultItem.accepted_person_details\n        ? ResultItem.accepted_person_details.name\n        : null,\n      mobileNumber: ResultItem.accepted_person_details\n        ? ResultItem.accepted_person_details.mobile_number\n        : null\n    }\n    if (ResultItem.number_of_seats) {\n      this.noOfSeats = ResultItem.number_of_seats\n        ? ResultItem.number_of_seats\n        : null\n    } else {\n      this.noOfSeats = ResultItem.number_of_seats_available\n        ? ResultItem.number_of_seats_available\n        : null\n    }\n    this.luggageQuantity = ResultItem.luggage_quantity\n      ? ResultItem.luggage_quantity\n      : null\n    this.isStatusPending = ResultItem.is_status_pending\n      ? ResultItem.is_status_pending\n      : null\n    this.status = ResultItem.status ? ResultItem.status : null\n    this.numberOfAssets = ResultItem.number_of_assets\n      ? ResultItem.number_of_assets\n      : null\n    this.assetType = ResultItem.asset_type ? ResultItem.asset_type : null\n    this.assetSensitivity = ResultItem.asset_sensitivity\n      ? ResultItem.asset_sensitivity\n      : null\n    this.whomToDeliver = ResultItem.whom_to_deliver\n      ? ResultItem.whom_to_deliver\n      : null\n    this.whomToDeliver = ResultItem.whom_to_deliver\n      ? ResultItem.whom_to_deliver\n      : null\n    this.assetQuantity = ResultItem.assets_quantity\n      ? ResultItem.assets_quantity\n      : null\n    this.travelMedium = ResultItem.travel_medium\n      ? ResultItem.travel_medium\n      : null\n  }\n  updateRideRequestStatus = () => {\n    if (this.isStatusPending) this.isStatusPending = false\n    else this.isStatusPending = true\n  }\n}\nexport default ResultITemModel\n","import { action, observable } from 'mobx'\nimport LetsRideService from '../../services/LetsRideService'\nimport { FormsInfoModel } from '../models/FormsInfoModel'\nimport { PaginationStore } from '../../../Common/stores/PaginationStore'\nimport { ResultITemModel } from '../models/ResultITemModel'\n\nconst LIMIT = 4\nclass LetsRideInfoStore {\n  letsRideService: LetsRideService\n  @observable formsInfo!: FormsInfoModel\n  @observable rideMatchingResultsInfo\n  @observable assetMatchingResultsInfo\n  @observable myRideRequestsInfo\n  @observable myAssetRequestsInfo\n  @observable sharedRideInfo\n  @observable sharedTravelInfo\n  limit: number = LIMIT\n  constructor(letsRideService: LetsRideService) {\n    this.letsRideService = letsRideService\n    this.init()\n  }\n  @action.bound\n  init = () => {\n    this.formsInfo = new FormsInfoModel(this.letsRideService)\n    this.rideMatchingResultsInfo = new PaginationStore(\n      this.letsRideService.GetRideMatchingResults,\n      this.limit,\n      ResultITemModel\n    )\n    this.assetMatchingResultsInfo = new PaginationStore(\n      this.letsRideService.GetAssetMatchingResults,\n      this.limit,\n      ResultITemModel\n    )\n    this.myRideRequestsInfo = new PaginationStore(\n      this.letsRideService.GetMyRideRequests,\n      this.limit,\n      ResultITemModel\n    )\n    this.myAssetRequestsInfo = new PaginationStore(\n      this.letsRideService.GetMyAssetRequests,\n      this.limit,\n      ResultITemModel\n    )\n    this.sharedRideInfo = new PaginationStore(\n      this.letsRideService.GetSharedRideDetails,\n      this.limit,\n      ResultITemModel\n    )\n    this.sharedTravelInfo = new PaginationStore(\n      this.letsRideService.GetSharedTravelInfo,\n      this.limit,\n      ResultITemModel\n    )\n  }\n  @action.bound\n  getRideMatchingResults = async requestObject => {\n    await this.rideMatchingResultsInfo.getEntitiesList(requestObject)\n  }\n}\nexport { LetsRideInfoStore }\n","export function resolveWithTimeout<T>(response: T): Promise<T> {\n  const timeOut = process.env.IS_JEST ? 0 : 2000\n  return new Promise(resolve => {\n    setTimeout(() => resolve(response), timeOut)\n  })\n}\n","import LetsRideService from '.'\nimport { resolveWithTimeout } from '../../../Common/utils/TestUtils'\nimport getRideMatchingResultsResponse from '../../fixtures/getRideMatchingResultsResponse.json'\nimport getAssetMatchingResultsResponse from '../../fixtures/getAssetMatchingResultsResponse.json'\nimport getMyRideRequestsResponse from '../../fixtures/getMyRideRequestsResponse.json'\nimport getMyAssetRequestsResponse from '../../fixtures/getMyAssetRequestResponse.json'\nimport getSharedRideDetailsResponse from '../../fixtures/getSharedRideDetailsResponse.json'\nimport getSharedTravelInfoResponse from '../../fixtures/getSharedTravelInfoResponse.json'\nimport { action } from \"mobx\"\nclass LetsRideAPIService implements LetsRideService {\n  GetRideMatchingResults(limit, offset, requestObject) {\n    let dummyData = GetPaginateData(limit, offset, getRideMatchingResultsResponse)\n    return resolveWithTimeout(dummyData)\n  }\n  GetAssetMatchingResults(limit, offset, requestObject) {\n    let dummyData = GetPaginateData(limit, offset, getAssetMatchingResultsResponse)\n    return resolveWithTimeout(dummyData)\n  }\n  GetMyRideRequests(limit, offset, requestObject) {\n    let dummyData = GetPaginateData(limit, offset, getMyRideRequestsResponse)\n    return resolveWithTimeout(dummyData)\n  }\n  GetMyAssetRequests(limit, offset, requestObject) {\n    let dummyData = GetPaginateData(limit, offset, getMyAssetRequestsResponse)\n    return resolveWithTimeout(dummyData)\n  }\n  GetSharedRideDetails(limit, offset, requestObject) {\n    let dummyData = GetPaginateData(limit, offset, getSharedRideDetailsResponse)\n    return resolveWithTimeout(dummyData)\n  }\n  GetSharedTravelInfo(limit, offset, requestObject) {\n    let dummyData = GetPaginateData(limit, offset, getSharedTravelInfoResponse)\n    return resolveWithTimeout(dummyData)\n  }\n  AddRideRequestAPI() {\n    return resolveWithTimeout({})\n  }\n  AddAsserTransportRequestAPI() {\n    return resolveWithTimeout({})\n  }\n  AddShareRideAPI() {\n    return resolveWithTimeout({})\n  }\n  AddShareTravelInfoAPI() {\n    return resolveWithTimeout({})\n  }\n}\n\nexport default LetsRideAPIService\n\n\nfunction GetPaginateData(limit, offset, fixtureData) {\n  let dataFromFixture = fixtureData.data.slice()\n  let data = dataFromFixture.splice(offset, limit)\n  let dummyData = {\n    data: data,\n    total_count: fixtureData.total_count\n  }\n  return dummyData\n}","import { LetsRideInfoStore } from '../../UserModule/stores/LetsRideInfoStore'\nimport LetsRideAPIService from '../../UserModule/services/LetsRideService/LetsRideService.fixture'\n\nconst letsRideInfoStore = new LetsRideInfoStore(new LetsRideAPIService())\n\nexport default { letsRideInfoStore }\n","import React, { Suspense,  } from 'react'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport { Provider } from 'mobx-react'\nimport { I18nextProvider } from 'react-i18next'\n\nimport HomeRoute from './Common/routes/HomeRoute'\n\nimport { HOME_ROUTE_PATH } from './Common/constants/NavigationConstants'\n\nimport i18n from './Common/i18n'\nimport { userRoutes } from './UserModule/routes'\nimport stores from './Common/stores'\n\nconst App = () => {\n  return (\n    <Provider {...stores}>\n      <I18nextProvider i18n={i18n}>\n        <Suspense fallback={<div />}>\n          <Router basename={process.env.PUBLIC_URL}>\n            <Switch>\n              {userRoutes}\n              <Route path={HOME_ROUTE_PATH}>\n                <HomeRoute />\n              </Route>\n            </Switch>\n          </Router>\n        </Suspense>\n      </I18nextProvider>\n    </Provider>\n  )\n}\n\nexport default App\n","export const HOME_ROUTE_PATH = '/'\nexport const LETSRIDE_BASE_URL = ''\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './styles/tailwind.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}