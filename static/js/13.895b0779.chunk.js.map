{"version":3,"sources":["Common/constants/APIConstants.ts","Common/utils/APIUtils.ts","Common/components/Icons/Loader/SvgFile.js","Common/components/Icons/Loader/index.js","Common/components/LoadingWrapperWithFailure/styledComponents.js","Common/components/LoadingWrapperWithFailure/LoadingView.js","Common/components/LoadingWrapperWithFailure/FailureView.js","Common/components/LoadingWrapperWithFailure/index.js","Common/components/MenuBar/styledComponents.ts","Common/components/MenuBar/MenuBar.tsx","UserModule/constants/TableHeadings.ts","UserModule/components/common/RidesInfoDashboard/styledComponents.tsx","Common/components/TabBar/TabBar.tsx","UserModule/components/common/RidesInfoLayout/styledComponents.tsx","Common/components/Table/Table.tsx","UserModule/components/common/Dashboard/styledComponents.tsx","UserModule/components/common/Dashboard/Dashboard.tsx","Common/components/Paginate/Paginate.tsx","Common/components/Icons/PlusIcon/PlusIcon.tsx","Common/constants/FilterConstants.ts","Common/components/Icons/FilterIcon/FilterIcon.tsx","Common/components/Filter/styledComponents.ts","Common/components/Filter/Filter.tsx","UserModule/components/common/RidesInfoLayout/RidesInfoLayout.tsx","UserModule/components/common/RidesInfoDashboard/RidesInfoDashboard.tsx","UserModule/components/RideInfoMainPage/styledComponents.tsx","UserModule/components/RideInfoMainPage/RideInfoMainPage.tsx","UserModule/routes/RideInfoMainRoute/RideInfoMainRoute.tsx","UserModule/routes/RideInfoMainRoute/index.ts"],"names":["resStatuses","statusCodes","apiErrorProblems","getFormattedError","apiError","errorViewDescription","description","errorConstant","title","errorCode","undefined","parsedError","parsedMessage","JSON","parse","data","message","response","errorTitle","errorDescription","e","res_status","http_status_code","error","networkError","timeoutError","problem","isNetworkErrorOrTimedOutError","stringify","Loader","this","props","width","height","fill","viewBox","xmlns","aria-label","cx","cy","r","attributeName","from","to","begin","dur","values","calcMode","repeatCount","Component","defaultProps","SvgWrapper","renderComponent","SvgFile","LoadingViewContainer","styled","div","FailureViewContainer","FailureViewMessage","p","RetryButton","button","LoadingView","React","FailureView","observer","onRetryClick","errorMessage","onClick","LoadingWrapperWithFailure","apiStatus","RenderSuccessUI","renderSuccessUI","API_INITIAL","API_FETCHING","API_SUCCESS","API_FAILED","Layout","Text","Typo14HKGroteskRegular","ActiveButtonStyles","css","COLORS","brightBlue","white","ButtonStyles","lightBlueGrey","darkBlueGrey","LeftButtonStyles","LeftActiveButtonStyles","RightButtonStyles","RightActiveButtonStyles","menus","MenuBar","onclickMenu1","selectedMenu","onClickMenu","onclickMenu2","onclickMenu3","menu1","menu2","menu3","menu1Name","menu2Name","menu3Name","disabled","text","textTypo","buttonStyles","match","observable","TableHeadingsConstants","RideMatchingTableHeadings","AssetMatchingTableHeadings","RideRequestTableHeadings","AssetRequestTableHeadings","SharedRideTableHeadings","SharedTravelInfoTableHeadings","DashboardWrapper","TabBar","firstData","secondDate","renderedComponent","dataForComponentOne","dataForComponentTwo","Tab","menu","secondary","pointing","panes","menuItem","render","key","style","Header","TotalTasks","Typo14SteelHKGroteskRegular","Footer","FormLink","FormLabel","Pages","RidesInfoLayoutwrapper","Table","TableBody","Body","TableRow","Row","TableCell","Cell","CellLabel","HeadingLable","Typo12SteelHKGroteskSemiBold","Details","Dashboard","dashboard","headings","tableData","padded","map","heading","rowData","id","AcceptedPersonDetails","acceptedPersonDetails","cellData","fromPlace","toPlace","isFlexible","FromAndToDate","fromDateTime","toDateTime","noOfSeats","luggageQuantity","numberOfAssets","assetQuantity","assetType","assetSensitivity","whomToDeliver","travelMedium","isStatusPending","CheckBox","handleCheck","updateRideRequestStatus","isChecked","isLabled","status","name","mobileNumber","isCenter","textAlign","Paginate","pageCount","marginPagesDisplayed","pageRangeDisplayed","onPageChange","containerClassName","activeClassName","previousLabel","nextLabel","PlusIcon","fillRule","d","clipRule","FilterConstants","FilterIcon","img","FilterContainer","Dropdown","DropdownContent","DropdownItem","FilterText","Typo12DarkBlueGreyHKGroteskSemiBold","FilterAndTextWrapper","Option","value","Filter","onClickDropdownItem","event","console","log","parent","target","innerHTML","onClickSelectFilter","ListOfItems","eachItem","className","RidesInfoLayout","init","currentPage","getData","pagination","matchingResults","onClickFormTitle","history","formLink","pages","selected","dashboardHeadings","totalPages","totalCount","entitiesList","t","getEntitiesListAPIStatus","getEntitiesListAPIError","formTitle","withTranslation","withRef","withRouter","RidesInfoDashboard","dashboardData","categories","one","two","PageWrapper","renderedMenus","Typo14WhiteHKGroteskSemiBold","RideInfoMainPage","rideMatchingResultsInfo","assetMatchingResultsInfo","goToRequstRidePage","goToRequstAssetTransportPage","myRideRequestsInfo","myAssetRequestsInfo","sharedRideInfo","sharedTravelInfo","renderedInfo","goToShareRidePage","goToShareTravelInfoPage","MainPageLayout","src","RideInfoMainRoute","inject","getLetsRideInfoStore"],"mappings":"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","file":"static/js/13.895b0779.chunk.js","sourcesContent":["export const apiMethods = {\n  post: 'POST',\n  get: 'GET',\n  delete: 'DELETE',\n  put: 'PUT'\n}\n\nconst INVALID_URL_TOKEN = 'INVALID_URL_TOKEN'\nconst INVALID_TOKEN = 'INVALID_TOKEN'\nconst INVALID_USER = 'INVALID_USER'\nconst NOT_AUTHORIZED_EXCEPTION = 'NotAuthorizedException'\nconst USER_NOT_FOUND_EXCEPTION = 'UserNotFoundException'\nconst INVALID_SESSION_TOKEN = 'INVALID_SESSION_TOKEN'\nconst REQUEST_TIMED_OUT = 'Endpoint request timed out'\nconst INTERNAL_SERVER_ERROR_CODE = 500\nconst NO_INTERNET_ERROR_CODE = 503\nconst BAD_REQUEST_ERROR_CODE = 400\nconst UNAUTHORIZED_ERROR_CODE = 401\nconst ACCESS_FORBIDDEN_ERROR_CODE = 403\nconst NOT_FOUND_ERROR_CODE = 404\n\nexport const resStatuses = {\n  invalidURLToken: INVALID_URL_TOKEN,\n  invalidToken: INVALID_TOKEN,\n  invalidUser: INVALID_USER,\n  notAuthorizedException: NOT_AUTHORIZED_EXCEPTION,\n  userNotFoundException: USER_NOT_FOUND_EXCEPTION,\n  invalidSessionToken: INVALID_SESSION_TOKEN,\n  requestTimedOut: REQUEST_TIMED_OUT\n}\n\nexport const statusCodes = {\n  internalServerErrorCode: INTERNAL_SERVER_ERROR_CODE,\n  noInternetErrorCode: NO_INTERNET_ERROR_CODE,\n  badRequestErrorCode: BAD_REQUEST_ERROR_CODE,\n  unAuthorizedErrorCode: UNAUTHORIZED_ERROR_CODE,\n  accessForbiddenErrorCode: ACCESS_FORBIDDEN_ERROR_CODE,\n  notFoundErrorCode: NOT_FOUND_ERROR_CODE\n}\n\nexport const apiErrorProblems = {\n  networkError: 'NETWORK_ERROR',\n  timeoutError: 'TIMEOUT_ERROR'\n}\n","import getData from '@ib/api'\n\nimport {\n  apiMethods,\n  statusCodes,\n  resStatuses,\n  apiErrorProblems\n} from '../constants/APIConstants'\nimport { getAccessToken } from './StorageUtils'\n\nexport const networkCallWithApisauce = async (\n  api,\n  url,\n  requestObject,\n  type = apiMethods.post\n) => {\n  let response: any | null = null\n  const accessToken = getAccessToken()\n  if (accessToken) {\n    api.setHeader('Authorization', `Bearer ${accessToken}`)\n  }\n  api.setHeader('Content-Type', 'application/json; charset=UTF-8')\n  try {\n    response = await getData(api, url, requestObject, type)\n  } catch (error) {\n    throw error\n  }\n  return response\n}\n\nexport const getUserDisplayableErrorMessage = (error): string => {\n  const formattedError = getFormattedError(error)\n  return formattedError.description\n}\n\nexport function isNetworkErrorOrTimedOutError(error): boolean {\n  const apiError = JSON.parse(error)\n  const { networkError, timeoutError } = apiErrorProblems\n  return apiError.problem === networkError || apiError.problem === timeoutError\n    ? true\n    : false\n}\n\nexport const getFormattedError = apiError => {\n  //TODO: Need to use strings from i18n\n  const errorViewTitle = 'Oops! Something Went Wrong'\n  const errorViewDescription =\n    \"We're having some trouble completing your request. Please try again.\"\n  const connectionLost = 'Connection lost'\n  const internetConnection = 'Please check your internet connection'\n\n  let description = ''\n  let errorConstant = ''\n  let title = errorViewTitle\n  let errorCode = statusCodes.internalServerErrorCode\n  if (apiError !== null && apiError !== undefined) {\n    try {\n      const parsedMessage = JSON.parse(apiError)\n      let parsedError\n\n      if (parsedMessage.data === undefined || parsedMessage.data === null) {\n        // To handle case when we are directly returning backend error message\n        parsedError = parsedMessage\n      } else {\n        // To handle case when we are adding all the requests to backend error message\n        parsedError = parsedMessage.data\n      }\n\n      if (parsedError !== undefined && parsedError !== null) {\n        if (\n          parsedError.message &&\n          parsedError.message === resStatuses.requestTimedOut\n        ) {\n          title = errorViewTitle\n          description = errorViewDescription\n        }\n\n        if (parsedError.response) {\n          try {\n            const response = JSON.parse(parsedError.response)\n            const {\n              title: errorTitle,\n              description: errorDescription\n            } = response\n            if (errorTitle) {\n              title = errorTitle\n            }\n            if (errorDescription) {\n              description = errorDescription\n            } else {\n              description = parsedError.response\n            }\n          } catch (e) {\n            description = parsedError.response\n          }\n          errorConstant = parsedError.res_status\n        }\n        if (parsedError.http_status_code) {\n          errorCode = parsedError.http_status_code\n          errorConstant = parsedError.res_status\n          if (\n            parsedError.http_status_code === statusCodes.noInternetErrorCode\n          ) {\n            title = connectionLost\n            description = internetConnection\n          }\n        }\n      }\n      if (isNetworkErrorOrTimedOutError(JSON.stringify(parsedError))) {\n        title = connectionLost\n        description = internetConnection\n      }\n    } catch (e) {\n      // console.log('err >><<<', e)\n    }\n  }\n\n  if (description === null || description === '') {\n    title = errorViewTitle\n    description = errorViewDescription\n  }\n  const apiErrorResponse = {\n    errorCode,\n    title,\n    description,\n    errorConstant\n  }\n  return apiErrorResponse\n}\n","import React, { Component } from 'react'\n\nclass Loader extends Component {\n  static defaultProps = {\n    width: 100,\n    height: 100,\n    fill: '#00BFFF'\n  }\n\n  render() {\n    const { width, height, fill } = this.props\n    return (\n      <svg\n        width={width}\n        height={height}\n        viewBox='0 0 120 30'\n        xmlns='http://www.w3.org/2000/svg'\n        fill={fill}\n        aria-label='audio-loading'\n      >\n        <circle cx={15} cy={15} r='12.2657'>\n          <animate\n            attributeName='r'\n            from={15}\n            to={15}\n            begin='0s'\n            dur='0.8s'\n            values='15;9;15'\n            calcMode='linear'\n            repeatCount='indefinite'\n          />\n          <animate\n            attributeName='fillOpacity'\n            from={1}\n            to={1}\n            begin='0s'\n            dur='0.8s'\n            values='1;.5;1'\n            calcMode='linear'\n            repeatCount='indefinite'\n          />\n        </circle>\n        <circle\n          cx={60}\n          cy={15}\n          r='11.7343'\n          attributeName='fillOpacity'\n          from={1}\n          to='0.3'\n        >\n          <animate\n            attributeName='r'\n            from={9}\n            to={9}\n            begin='0s'\n            dur='0.8s'\n            values='9;15;9'\n            calcMode='linear'\n            repeatCount='indefinite'\n          />\n          <animate\n            attributeName='fillOpacity'\n            from='0.5'\n            to='0.5'\n            begin='0s'\n            dur='0.8s'\n            values='.5;1;.5'\n            calcMode='linear'\n            repeatCount='indefinite'\n          />\n        </circle>\n        <circle cx={105} cy={15} r='12.2657'>\n          <animate\n            attributeName='r'\n            from={15}\n            to={15}\n            begin='0s'\n            dur='0.8s'\n            values='15;9;15'\n            calcMode='linear'\n            repeatCount='indefinite'\n          />\n          <animate\n            attributeName='fillOpacity'\n            from={1}\n            to={1}\n            begin='0s'\n            dur='0.8s'\n            values='1;.5;1'\n            calcMode='linear'\n            repeatCount='indefinite'\n          />\n        </circle>\n      </svg>\n    )\n  }\n}\n\nexport default Loader\n","import React, { Component } from 'react'\nimport SvgWrapper from '../../SvgWrapper'\nimport SvgFile from './SvgFile'\n\nclass Loader extends Component {\n  render() {\n    return <SvgWrapper renderComponent={SvgFile} {...this.props} />\n  }\n}\n\nexport default Loader\n","import styled from '@emotion/styled'\nimport tw from 'tailwind.macro'\n\nexport const LoadingViewContainer = styled.div`\n  ${tw`flex flex-col justify-center items-center  `}\n  height:100%;\n`\n\nexport const FailureViewContainer = styled.div`\n  ${tw`flex flex-col justify-center items-center  `}\n  height:100%;\n`\n\nexport const FailureViewMessage = styled.p`\n  ${tw`m-6 text-2xl text-center`}\n`\n\nexport const RetryButton = styled.button`\n  ${tw`px-8 py-2 bg-blue-500 text-white text-2xl rounded`}\n`\n","import React from 'react'\n\nimport Loader from '../Icons/Loader'\n\nimport { LoadingViewContainer } from './styledComponents'\n\nclass LoadingView extends React.Component {\n  render() {\n    return (\n      <LoadingViewContainer>\n        <Loader />\n      </LoadingViewContainer>\n    )\n  }\n}\n\nexport default LoadingView\n","import React from 'react'\nimport { observer } from 'mobx-react'\n\nimport {\n  FailureViewContainer,\n  FailureViewMessage,\n  RetryButton\n} from './styledComponents'\n\n@observer\nclass FailureView extends React.Component {\n  render() {\n    const { onRetryClick, errorMessage } = this.props\n\n    return (\n      <FailureViewContainer>\n        <FailureViewMessage>{errorMessage}</FailureViewMessage>\n        <RetryButton onClick={onRetryClick}>Retry</RetryButton>\n      </FailureViewContainer>\n    )\n  }\n}\n\nexport default FailureView\n","import React from 'react'\nimport { observer } from 'mobx-react'\n\nimport {\n  API_INITIAL,\n  API_FETCHING,\n  API_SUCCESS,\n  API_FAILED\n} from '@ib/api-constants'\n\nimport { getUserDisplayableErrorMessage } from '../../utils/APIUtils'\n\nimport LoadingView from './LoadingView'\nimport FailureView from './FailureView'\n\n@observer\nclass LoadingWrapperWithFailure extends React.Component {\n  render() {\n    const {\n      apiStatus,\n      renderSuccessUI: RenderSuccessUI,\n      onRetryClick,\n      apiError\n    } = this.props\n    const errorMessage = getUserDisplayableErrorMessage(apiError)\n\n    switch (apiStatus) {\n      case API_INITIAL:\n      case API_FETCHING:\n        return <LoadingView />\n      case API_SUCCESS:\n        return <RenderSuccessUI />\n      case API_FAILED:\n        return (\n          <FailureView\n            onRetryClick={onRetryClick}\n            errorMessage={errorMessage}\n          />\n        )\n      default:\n        return null\n    }\n  }\n}\n\nexport default LoadingWrapperWithFailure\n","import styled from '@emotion/styled'\nimport tw from 'tailwind.macro'\nimport { Typo14HKGroteskRegular } from \"../../styleGuide/Typos\"\nimport { css } from \"@emotion/core\"\nimport { COLORS } from \"../../themes/Colors\"\n\nconst Layout = styled.div`\n   ${tw`flex flex-row`}\n`\nconst Button = styled.button`\n   height: 40px;\n   width: 102px;\n   border-radius: 4px;\n   background-color: white;\n   border: solid 1px #d7dfe9;\n`\nconst Text = styled(Typo14HKGroteskRegular)`\n   text-align: center;\n`\nexport const ActiveButtonStyles = css`\nwidth: 129px;\n  height: 40px;\n  border: solid 1px ${COLORS.brightBlue};\n  background-color: ${COLORS.brightBlue};\n  color:${COLORS.white};\n  border-radius:0px\n`\nexport const ButtonStyles = css`\nwidth: 129px;\n  height: 40px;\n  border: solid 1px ${COLORS.lightBlueGrey};\n  background-color: ${COLORS.white};\n  color:${COLORS.darkBlueGrey};\n  border-radius:0px\n`\nexport { Layout, Text, Button }\n\nexport const LeftButtonStyles = css`\nwidth: 129px;\n  height: 40px;\n  border: solid 1px ${COLORS.lightBlueGrey};\n  background-color: ${COLORS.white};\n  color:${COLORS.darkBlueGrey};\n  border-radius:4px 0px 0px 4px;\n`\nexport const LeftActiveButtonStyles = css`\nwidth: 129px;\n  height: 40px;\n  border: solid 1px ${COLORS.brightBlue};\n  background-color: ${COLORS.brightBlue};\n  color:${COLORS.white};\n  border-radius:4px 0px 0px 4px;\n`\nexport const RightButtonStyles = css`\nwidth: 129px;\n  height: 40px;\n  border: solid 1px ${COLORS.lightBlueGrey};\n  background-color: ${COLORS.white};\n  color:${COLORS.darkBlueGrey};\n  border-radius:0px 4px 4px 0px;\n`\n\nexport const RightActiveButtonStyles = css`\nwidth: 129px;\n  height: 40px;\n  border: solid 1px ${COLORS.brightBlue};\n  background-color: ${COLORS.brightBlue};\n  color:${COLORS.white};\n  border-radius:0px 4px 4px 0px;\n`\n","import React, { Component } from 'react'\nimport {\n  Layout,\n  Text,\n  ButtonStyles,\n  ActiveButtonStyles,\n  LeftButtonStyles,\n  RightButtonStyles,\n  LeftActiveButtonStyles,\n  RightActiveButtonStyles\n} from './styledComponents'\nimport { observer } from 'mobx-react'\nimport { observable } from 'mobx'\n\nimport { Button } from '../Button'\n\nexport const menus = { menu1: 'Menu1', menu2: 'Menu2', menu3: 'Menu3' }\n\ninterface MenuBarProps {\n  menu: string\n  menu1Name: string\n  menu2Name: string\n  menu3Name: string\n  onClickMenu: (value: string) => void\n}\n\n@observer\nclass MenuBar extends Component<MenuBarProps> {\n  @observable selectedMenu\n  constructor(props) {\n    super(props)\n    this.selectedMenu = menus.menu1\n  }\n  onclickMenu1 = () => {\n    this.selectedMenu = menus.menu1\n    this.props.onClickMenu(this.selectedMenu)\n  }\n  onclickMenu2 = () => {\n    this.selectedMenu = menus.menu2\n    this.props.onClickMenu(this.selectedMenu)\n  }\n  onclickMenu3 = () => {\n    this.selectedMenu = menus.menu3\n    this.props.onClickMenu(this.selectedMenu)\n  }\n  render() {\n    const { menu1, menu2, menu3 } = menus\n    const { menu1Name, menu2Name, menu3Name } = this.props\n    return (\n      <Layout>\n        {this.selectedMenu && (\n          <>\n            <Button\n              disabled={false}\n              onClick={this.onclickMenu1}\n              text={menu1Name}\n              textTypo={Text}\n              buttonStyles={\n                this.selectedMenu.match(menu1)\n                  ? LeftActiveButtonStyles\n                  : LeftButtonStyles\n              }\n            />\n            <Button\n              disabled={false}\n              onClick={this.onclickMenu2}\n              text={menu2Name}\n              textTypo={Text}\n              buttonStyles={\n                this.selectedMenu.match(menu2)\n                  ? ActiveButtonStyles\n                  : ButtonStyles\n              }\n            />\n            <Button\n              disabled={false}\n              onClick={this.onclickMenu3}\n              text={menu3Name}\n              textTypo={Text}\n              buttonStyles={\n                this.selectedMenu.match(menu3)\n                  ? RightActiveButtonStyles\n                  : RightButtonStyles\n              }\n            />\n          </>\n        )}\n      </Layout>\n    )\n  }\n}\n\nexport { MenuBar }\n","const TableHeadingsConstants = {\n    acceptedPersonDetails: 'ACCEPTED PERSON DETAILS',\n    from: 'FROM',\n    to: 'TO',\n    dateAndTime: 'DATE AND TIME',\n    status: 'STATUS',\n    noOfSeats: 'NO.OF SEATS',\n    luggageQuantity: 'LUGGAGE QUANTITY',\n    assetType: 'ASSET TYPE',\n    assetSensitivity: 'ASSET SENSITIVITY',\n    whomToDeliver: 'WHOM TO DELIVER',\n    noOfAssets: 'NO.OF ASSETS',\n    assetsQuantity: 'ASSET QUANTITY',\n    travelMedium: 'TRAVEL MEDIUM',\n\n}\nconst { acceptedPersonDetails, from, to, dateAndTime, status } = TableHeadingsConstants\n\n\nconst { luggageQuantity, noOfSeats, } = TableHeadingsConstants\nexport const RideMatchingTableHeadings = [acceptedPersonDetails, from, to, dateAndTime, noOfSeats, luggageQuantity, status]\n\nconst { noOfAssets, assetType, assetSensitivity, whomToDeliver } = TableHeadingsConstants\nexport const AssetMatchingTableHeadings = [acceptedPersonDetails, from, to, dateAndTime, noOfAssets, assetType, assetSensitivity, whomToDeliver, status]\n\nexport const RideRequestTableHeadings = [from, to, dateAndTime, noOfAssets, luggageQuantity, acceptedPersonDetails, status]\n\nexport const AssetRequestTableHeadings = [from, to, dateAndTime, noOfAssets, assetType, assetSensitivity, whomToDeliver, acceptedPersonDetails, status]\n\nconst { assetsQuantity } = TableHeadingsConstants\nexport const SharedRideTableHeadings = [from, to, dateAndTime, noOfSeats, assetsQuantity, status]\n\nconst { travelMedium } = TableHeadingsConstants\nexport const SharedTravelInfoTableHeadings = [from, to, dateAndTime, travelMedium, assetsQuantity, status]","import styled from '@emotion/styled'\nimport tw from 'tailwind.macro'\n\nexport const DashboardWrapper = styled.div`\n  flex-grow: 1;\n  ${tw`flex justify-center mt-16 pl-48 pr-40 w-screen `}\n`\n","import React from 'react'\nimport { Tab } from 'semantic-ui-react'\nimport 'semantic-ui-css/semantic.min.css'\nimport { observer } from 'mobx-react'\n\nfunction panesList(Component, firstData, secondDate) {\n  return [\n    {\n      menuItem: firstData.title,\n      render: () => <Component key={firstData.title} data={firstData} />\n    },\n    {\n      menuItem: secondDate.title,\n      render: () => <Component key={secondDate.title} data={secondDate} />\n    }\n  ]\n}\ninterface TabBarProps {\n  renderedComponent: Function\n  dataForComponentOne: any\n  dataForComponentTwo: any\n}\n\n@observer\nclass TabBar extends React.Component<TabBarProps> {\n  render() {\n    const {\n      renderedComponent,\n\n      dataForComponentOne,\n      dataForComponentTwo\n    } = this.props\n    return (\n      <Tab\n        menu={{ secondary: true, pointing: true }}\n        panes={panesList(\n          renderedComponent,\n          dataForComponentOne,\n          dataForComponentTwo\n        )}\n        style={{ width: '100%', height: '300px' }}\n      />\n    )\n  }\n}\n\nexport { TabBar }\n","import styled from '@emotion/styled'\nimport tw from 'tailwind.macro'\nimport { Typo14SteelHKGroteskRegular } from '../../../../Common/styleGuide/Typos'\n\nexport const Header = styled.div`\n  ${tw`flex justify-between items-center`}\n`\nexport const FilterBar = styled.div`\n  ${tw`flex `}\n`\nexport const TotalTasks = styled(Typo14SteelHKGroteskRegular)``\nexport const Footer = styled.div`\n  ${tw`flex justify-between items-center`}\n`\nexport const FormLink = styled.div`\n  ${tw`flex items-center cursor-pointer`}\n`\nexport const FormLabel = styled(Typo14SteelHKGroteskRegular)``\n\nexport const Pages = styled(Typo14SteelHKGroteskRegular)``\n\nexport const RidesInfoLayoutwrapper = styled.div`\n  ${tw` mt-4`}\n`\n","import React from 'react'\nimport { Table } from 'semantic-ui-react'\nimport 'semantic-ui-css/semantic.min.css'\n\nexport default Table\n","import styled from '@emotion/styled'\nimport tw from 'tailwind.macro'\nimport {\n  Typo14SteelHKGroteskRegular,\n  Typo12SteelHKGroteskSemiBold\n} from '../../../../Common/styleGuide/Typos'\nimport { Table } from '../../../../Common/components/Table'\n\nexport const TableBody = styled(Table.Body)``\n\nexport const TableRow = styled(Table.Row)``\n\nexport const TableCell = styled(Table.Cell)``\nexport const CellLabel = styled(Typo14SteelHKGroteskRegular)``\nexport const HeadingLable = styled(Typo12SteelHKGroteskSemiBold)``\nexport const Details = styled.div`\n  ${tw`flex flex-col`}\n`\n","import React from 'react'\nimport {\n  HeadingLable,\n  CellLabel,\n  TableBody,\n  TableRow,\n  TableCell,\n  Details\n} from './styledComponents'\nimport { Table } from '../../../../Common/components/Table'\nimport { CheckBox } from '../../../../Common/components/CheckBox'\n\nimport { observer } from 'mobx-react'\n\ninterface DashboardProps {\n  headings: Array<string>\n  title: string\n  tableData: any\n  dashboard: string\n}\n\n@observer\nclass Dashboard extends React.Component<DashboardProps> {\n  render() {\n    const { dashboard, title, headings, tableData } = this.props\n    return (\n      <Table padded>\n        <TableBody>\n          <TableRow>\n            {headings.map(heading => (\n              <TableCell key={heading}>\n                <HeadingLable>{heading}</HeadingLable>\n              </TableCell>\n            ))}\n          </TableRow>\n          {tableData.map(rowData => (\n            <TableRow key={rowData.id}>\n              {dashboard.match('matchingResults') && (\n                <AcceptedPersonDetails\n                  acceptedPersonDetails={rowData.acceptedPersonDetails}\n                />\n              )}\n              <Cell cellData={rowData.fromPlace} />\n              <Cell cellData={rowData.toPlace} />\n              {rowData.isFlexible ? (\n                <FromAndToDate\n                  fromDateTime={rowData.fromDateTime}\n                  toDateTime={rowData.toDateTime}\n                />\n              ) : (\n                <Cell cellData={rowData.fromDateTime} />\n              )}\n\n              {title.match('RIDE')\n                ? (dashboard.match('matchingResults') && (\n                    <>\n                      <Cell cellData={rowData.noOfSeats} />\n                      <Cell cellData={rowData.luggageQuantity} />\n                    </>\n                  )) ||\n                  (dashboard.match('myRequests') && (\n                    <>\n                      <Cell cellData={rowData.numberOfAssets} />\n                      <Cell cellData={rowData.luggageQuantity} />\n                    </>\n                  )) ||\n                  (dashboard.match('sharedDetails') && (\n                    <>\n                      <Cell cellData={rowData.noOfSeats} />\n                      <Cell cellData={rowData.assetQuantity} />\n                    </>\n                  ))\n                : ((dashboard.match('matchingResults') ||\n                    dashboard.match('myRequests')) && (\n                    <>\n                      <Cell cellData={rowData.numberOfAssets} />\n                      <Cell cellData={rowData.assetType} />\n                      <Cell cellData={rowData.assetSensitivity} />\n                      <Cell cellData={rowData.whomToDeliver} />\n                    </>\n                  )) ||\n                  (dashboard.match('sharedDetails') && (\n                    <>\n                      <Cell cellData={rowData.travelMedium} />\n                      <Cell cellData={rowData.assetQuantity} />\n                    </>\n                  ))}\n              {dashboard.match('myRequests') && (\n                <AcceptedPersonDetails\n                  acceptedPersonDetails={rowData.acceptedPersonDetails}\n                />\n              )}\n              {dashboard.match('matchingResults') ? (\n                <TableCell key={rowData.isStatusPending}>\n                  <CheckBox\n                    handleCheck={rowData.updateRideRequestStatus}\n                    isChecked={rowData.isStatusPending}\n                    isLabled={rowData.isStatusPending}\n                  />\n                </TableCell>\n              ) : (\n                <Cell cellData={rowData.status} />\n              )}\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    )\n  }\n}\n\nexport default Dashboard\n\nfunction AcceptedPersonDetails(props) {\n  const { name, mobileNumber } = props.acceptedPersonDetails\n  return (\n    <TableCell key={name}>\n      <Details>\n        <CellLabel>{name}</CellLabel>\n        <CellLabel>{mobileNumber}</CellLabel>\n      </Details>\n    </TableCell>\n  )\n}\ninterface CellProps {\n  cellData: string | number\n  isCenter?: boolean\n}\nclass Cell extends React.Component<CellProps> {\n  static defaultProps = {\n    isCenter: false\n  }\n  render() {\n    const { cellData, isCenter } = this.props\n\n    return (\n      <TableCell key={cellData} textAlign={isCenter ? 'center' : 'left'}>\n        <CellLabel>{cellData}</CellLabel>\n      </TableCell>\n    )\n  }\n}\n\nfunction FromAndToDate(props) {\n  const { fromDateTime, toDateTime } = props\n  return (\n    <TableCell key={fromDateTime}>\n      <Details>\n        <CellLabel>\n          {fromDateTime}\n          {' to '}\n        </CellLabel>\n        <CellLabel>{toDateTime}</CellLabel>\n      </Details>\n    </TableCell>\n  )\n}\n","import React, { Component } from 'react'\nimport ReactPaginate from 'react-paginate'\n\ninterface PaginateProps {\n  pageCount: number\n  marginPagesDisplayed: number\n  pageRangeDisplayed: number\n  onPageChange: (value) => void\n  containerClassName: any\n  activeClassName: any\n}\nclass Paginate extends Component<PaginateProps> {\n  render() {\n    const {\n      pageCount,\n      marginPagesDisplayed,\n      pageRangeDisplayed,\n      onPageChange,\n      containerClassName,\n      activeClassName\n    } = this.props\n    return (\n      <ReactPaginate\n        previousLabel={'<'}\n        nextLabel={'>'}\n        pageCount={pageCount}\n        marginPagesDisplayed={marginPagesDisplayed}\n        pageRangeDisplayed={pageRangeDisplayed}\n        onPageChange={onPageChange}\n        containerClassName={containerClassName}\n        activeClassName={activeClassName}\n      />\n    )\n  }\n}\n\nexport default Paginate\n","import * as React from 'react'\n\nfunction PlusIcon(props) {\n  return (\n    <svg width={16} height={16} fill='none' viewBox='0 0 16 16' {...props}>\n      <path\n        fill='#7E858E'\n        fillRule='evenodd'\n        d='M7.25 7.25V2h1.5v5.25H14v1.5H8.75V14h-1.5V8.75H2v-1.5h5.25z'\n        clipRule='evenodd'\n      />\n    </svg>\n  )\n}\n\nexport default PlusIcon\n","export const FilterConstants = [\n    'All'\n]","import * as React from 'react'\n\nfunction FilterIcon(props) {\n  return (\n    <svg width={16} height={16} fill='none' viewBox='0 0 16 16' {...props}>\n      <path\n        fill='#7E858E'\n        fillRule='evenodd'\n        d='M1 3a1 1 0 011-1h12a1 1 0 010 2H2a1 1 0 01-1-1zm2 5a1 1 0 011-1h8a1 1 0 010 2H4a1 1 0 01-1-1zm3 4a1 1 0 000 2h4a1 1 0 000-2H6z'\n        clipRule='evenodd'\n      />\n    </svg>\n  )\n}\n\nexport default FilterIcon\n","import styled from '@emotion/styled'\nimport tw from 'tailwind.macro'\nimport { Typo14SteelHKGroteskRegular, Typo12DarkBlueGreyHKGroteskSemiBold } from \"../../styleGuide/Typos\"\n\nexport const FilterIcon = styled.img`\n   ${tw`ml-2`};\n   width: 16px;\n   height: 16px;\n   object-fit: contain;\n`\n\nexport const FilterContainer = styled.div`\n   ${tw`flex justify-between mt-4 mb-4`}\n`\n\nexport const Dropdown = styled.div`\n   ${tw``}\n   \n`\n\nexport const Container = styled.div`\n   ${tw`flex items-center justify-center`};\n   width: 200px;\n`\n\nexport const DropdownContent = styled.div`\n   ${tw``};\n   cursor: pointer;\n   background-color: #f9f9f9;\n   padding: 12px 16px;\n   \n`\n\nexport const DropdownItem = styled.button`\n   ${tw`hover:bg-gray-200 p-1 flex flex-col focus:outline-none`}\n   \n`\nexport const FilterText = styled(Typo12DarkBlueGreyHKGroteskSemiBold)`\n   ${tw``}\n   margin-left:5px;\n`\n\nexport const FilterAndTextWrapper = styled.div`\n   ${tw`flex`}\n`\ninterface OptionProps {\n   value: string\n}\nexport const Option = styled(Typo14SteelHKGroteskRegular)`\noutline: none\n${(props: OptionProps) => props.value}\n\n   `\n\n","import React, { Component } from 'react'\n\nimport { FilterConstants } from '../../constants/FilterConstants'\nimport { FilterIcon } from '../Icons/FilterIcon'\nimport './index.css'\nimport {\n  FilterContainer,\n  FilterAndTextWrapper,\n  Dropdown,\n  DropdownContent,\n  DropdownItem,\n  FilterText,\n  Option\n} from './styledComponents'\n\nexport interface FilterFunctionProps {\n  onClickSelectFilter?: () => void\n}\n\nclass Filter extends Component<FilterFunctionProps> {\n  onClickDropdownItem = event => {\n    console.log(event.parent)\n    console.log(event.target.innerHTML)\n\n    const { onClickSelectFilter } = this.props\n  }\n\n  ListOfItems = () => {\n    return FilterConstants.map(eachItem => {\n      return (\n        <DropdownItem\n          id={eachItem}\n          key={eachItem}\n          onClick={this.onClickDropdownItem}\n          value={eachItem}\n        >\n          <Option value={'hey'}>{eachItem}</Option>\n        </DropdownItem>\n      )\n    })\n  }\n\n  render() {\n    return (\n      <FilterContainer>\n        <Dropdown className={'dropdown'}>\n          <FilterAndTextWrapper>\n            <FilterIcon />\n            <FilterText>FILTER</FilterText>\n          </FilterAndTextWrapper>\n          <DropdownContent className={'dropdown-content'}>\n            {this.ListOfItems()}\n          </DropdownContent>\n        </Dropdown>\n      </FilterContainer>\n    )\n  }\n}\n\nexport default Filter\n","import React, { Component } from 'react'\nimport { observer } from 'mobx-react'\nimport { RidesInfoLayoutwrapper } from './styledComponents'\nimport LoadingWrapperWithFailure from '../../../../Common/components/LoadingWrapperWithFailure'\nimport { Dashboard } from '../Dashboard'\nimport { observable } from 'mobx'\nimport { WithTranslation, withTranslation } from 'react-i18next'\nimport { RouteComponentProps, withRouter } from 'react-router-dom'\nimport { Paginate } from '../../../../Common/components/Paginate'\nimport '../../../../Common/styles/index.css'\nimport {\n  Header,\n  TotalTasks,\n  Footer,\n  FormLink,\n  FormLabel,\n  Pages\n} from './styledComponents'\nimport { PlusIcon } from '../../../../Common/components/Icons/PlusIcon'\nimport { FilterBar } from '../../../../Common/components/FilterBar'\nimport { Filter } from '../../../../Common/components/Filter'\n\ninterface RidesInfoLayoutProps extends WithTranslation, RouteComponentProps {\n  data: any\n}\n@observer\nclass RidesInfoLayout extends Component<RidesInfoLayoutProps> {\n  @observable currentPage!: number\n  @observable pageCount!: number\n  @observable TotalTasks!: number\n  constructor(props) {\n    super(props)\n    this.init()\n  }\n  init = () => {\n    this.currentPage = 1\n    this.pageCount = 1\n    this.TotalTasks = 0\n  }\n  componentDidMount() {\n    this.getData()\n  }\n  getData = () => {\n    const { pagination } = this.props.data.matchingResults\n    pagination(this.currentPage)\n  }\n  onClickFormTitle = () => {\n    const { history } = this.props\n    const { formLink } = this.props.data\n    formLink(history)\n  }\n  onPageChange = pages => {\n    this.currentPage = pages.selected + 1\n    const { pagination } = this.props.data.matchingResults\n    pagination(this.currentPage)\n  }\n  renderSuccessUI = observer(() => {\n    const { data } = this.props\n    const { dashboardHeadings, dashboard, title } = data\n    const { totalPages, totalCount, entitiesList } = data.matchingResults\n    this.pageCount = totalPages\n    this.TotalTasks = totalCount\n    return (\n      <Dashboard\n        headings={dashboardHeadings}\n        tableData={entitiesList}\n        dashboard={dashboard}\n        title={title}\n      />\n    )\n  })\n  render() {\n    const { t, data } = this.props\n    const {\n      getEntitiesListAPIStatus,\n      getEntitiesListAPIError,\n      entitiesList\n    } = data.matchingResults\n    // console.log(getEntitiesListAPIStatus, entitiesList)\n\n    return (\n      <RidesInfoLayoutwrapper>\n        <Header>\n          <TotalTasks>\n            {this.TotalTasks}\n            {t('letsride:tasks')}\n          </TotalTasks>\n          {/* <FilterBar /> */}\n          <Filter />\n        </Header>\n        <LoadingWrapperWithFailure\n          apiStatus={getEntitiesListAPIStatus}\n          apiError={getEntitiesListAPIError}\n          onRetryClick={this.getData}\n          renderSuccessUI={this.renderSuccessUI}\n        />\n        <Footer>\n          <FormLink onClick={this.onClickFormTitle}>\n            <PlusIcon />\n            <FormLabel>{data.formTitle}</FormLabel>\n          </FormLink>\n          <Pages>\n            {t('letsride:page')}\n            {this.currentPage}\n            {t('letsride:of')}\n            {this.pageCount}\n          </Pages>\n          <Paginate\n            pageCount={this.pageCount}\n            marginPagesDisplayed={2}\n            pageRangeDisplayed={1}\n            onPageChange={this.onPageChange}\n            containerClassName={'pagination'}\n            activeClassName={'active'}\n          />\n        </Footer>\n      </RidesInfoLayoutwrapper>\n    )\n  }\n}\n\nexport default withTranslation('translation', { withRef: true })(\n  withRouter(RidesInfoLayout)\n)\n","import React, { Component } from 'react'\nimport { observer } from 'mobx-react'\nimport { WithTranslation, withTranslation } from 'react-i18next'\nimport { DashboardWrapper } from './styledComponents'\nimport { TabBar } from '../../../../Common/components/TabBar'\nimport { RidesInfoLayout } from '../RidesInfoLayout'\n\ninterface RidesInfoDashboardProps extends WithTranslation {\n  dashboardData: any\n}\n@observer\nclass RidesInfoDashboard extends Component<RidesInfoDashboardProps> {\n  render() {\n    const { dashboardData } = this.props\n    return (\n      <DashboardWrapper>\n        <TabBar\n          renderedComponent={RidesInfoLayout}\n          dataForComponentOne={dashboardData.categories.one}\n          dataForComponentTwo={dashboardData.categories.two}\n        />\n      </DashboardWrapper>\n    )\n  }\n}\n\nexport default withTranslation('translation', { withRef: true })(\n  RidesInfoDashboard\n)\n","import styled from '@emotion/styled'\nimport tw from 'tailwind.macro'\nimport { css } from '@emotion/core'\nimport { COLORS } from '../../../Common/themes/Colors'\nimport {\n  Typo14WhiteHKGroteskSemiBold,\n  Typo12SteelHKGroteskSemiBold\n} from '../../../Common/styleGuide/Typos'\n\nexport const PageWrapper = styled.div`\n  ${tw`flex flex-col items-center justify-start mt-20 `}\n  flex-grow:1;\n  width: 100%;\n`\n\nexport const datePickerStyles = css`\n  ${tw`text-red`}\n  border:1px solid black\n`\nexport const signInButtonStyles = css`\n  width: 399px;\n  height: 40px;\n  border-radius: 4px;\n  background-color: ${COLORS.brightBlue};\n`\nexport const TextTypo = styled(Typo14WhiteHKGroteskSemiBold)``\n\nexport const inputStyles = css`\n  width: 401px;\n  height: 40px;\n  border-radius: 2px;\n  border: solid 1px ${COLORS.lightBlueGrey};\n  background-color: ${COLORS.white};\n`\nexport const InputLable = styled(Typo12SteelHKGroteskSemiBold)`\n  ${tw`flex `}\n`\nexport const cardStyles = css`\n  ${tw`flex items-center justify-center`}\n  width: 460px;\n  height: 200px;\n  border-radius: 6px;\n  box-shadow: 0 4px 40px 0 darkBlueGrey16;\n  border: solid 1px ${COLORS.lightBlueGrey};\n  background-color: ${COLORS.white};\n`\nexport const dropdownCss = css`\n  ${tw``}\n`\n","import React, { Component } from 'react'\nimport { withTranslation, WithTranslation } from 'react-i18next'\nimport { observer } from 'mobx-react'\nimport { observable } from 'mobx'\n\nimport { MainPageLayout } from '../../../Common/components/MainPageLayout'\nimport { MenuBar } from '../../../Common/components/MenuBar'\nimport { menus } from '../../../Common/components/MenuBar/MenuBar'\nimport { PaginationStore } from '../../../Common/stores/PaginationStore'\n\nimport {\n  goToRequstRidePage,\n  goToRequstAssetTransportPage,\n  goToShareRidePage,\n  goToShareTravelInfoPage\n} from '../../utils/NavigationUtils'\nimport {\n  RideMatchingTableHeadings,\n  AssetMatchingTableHeadings,\n  RideRequestTableHeadings,\n  AssetRequestTableHeadings,\n  SharedRideTableHeadings,\n  SharedTravelInfoTableHeadings\n} from '../../constants/TableHeadings'\n\nimport { RidesInfoDashboard } from '../common/RidesInfoDashboard'\n\nimport { PageWrapper } from './styledComponents'\n\nconst renderedMenus = {\n  matchingResults: 'matchingResults',\n  myRequests: 'myRequests',\n  sharedDetails: 'sharedDetails'\n}\n\nconst imgSrc =\n  'https://cdn.zeplin.io/5d0afc9102b7fa56760995cc/assets/c2438b2e-3c57-45cc-a4e7-10c2b3eec159.svg'\n\ninterface RideInfoMainPageProps extends WithTranslation {\n  rideMatchingResultsInfo: PaginationStore\n  assetMatchingResultsInfo: PaginationStore\n  myRideRequestsInfo: PaginationStore\n  myAssetRequestsInfo: PaginationStore\n  sharedRideInfo: PaginationStore\n  sharedTravelInfo: PaginationStore\n}\n\n@observer\nclass RideInfoMainPage extends Component<RideInfoMainPageProps> {\n  menu: string = menus.menu1\n  @observable renderedInfo = renderedMenus.matchingResults\n  @observable dashboardData!: any\n  constructor(props) {\n    super(props)\n    this.init()\n  }\n\n  init = () => {\n    const { t, rideMatchingResultsInfo, assetMatchingResultsInfo } = this.props\n    this.dashboardData = {\n      categories: {\n        one: {\n          dashboard: 'matchingResults',\n          title: t('letsride:ride'),\n          formTitle: t('letsride:addRideRequest'),\n          formLink: goToRequstRidePage,\n          matchingResults: rideMatchingResultsInfo,\n          dashboardHeadings: RideMatchingTableHeadings\n        },\n        two: {\n          dashboard: 'matchingResults',\n          title: t('letsride:asset'),\n          formTitle: t('letsride:addAssetRequest'),\n          formLink: goToRequstAssetTransportPage,\n          matchingResults: assetMatchingResultsInfo,\n          dashboardHeadings: AssetMatchingTableHeadings\n        }\n      }\n    }\n  }\n  onClickMenu = menu => {\n    const {\n      t,\n      rideMatchingResultsInfo,\n      assetMatchingResultsInfo,\n      myRideRequestsInfo,\n      myAssetRequestsInfo,\n      sharedRideInfo,\n      sharedTravelInfo\n    } = this.props\n    switch (menu) {\n      case menus.menu1:\n        this.renderedInfo = renderedMenus.matchingResults\n        this.dashboardData = {\n          categories: {\n            one: {\n              dashboard: 'matchingResults',\n              title: t('letsride:ride'),\n              formTitle: t('letsride:addRideRequest'),\n              formLink: goToRequstRidePage,\n              matchingResults: rideMatchingResultsInfo,\n              dashboardHeadings: RideMatchingTableHeadings\n            },\n            two: {\n              dashboard: 'matchingResults',\n              title: t('letsride:asset'),\n              formTitle: t('letsride:addAssetRequest'),\n              formLink: goToRequstAssetTransportPage,\n              matchingResults: assetMatchingResultsInfo,\n              dashboardHeadings: AssetMatchingTableHeadings\n            }\n          }\n        }\n        break\n      case menus.menu2:\n        this.renderedInfo = renderedMenus.myRequests\n        this.dashboardData = {\n          categories: {\n            one: {\n              dashboard: 'myRequests',\n              title: t('letsride:ride'),\n              formTitle: t('letsride:addRideRequest'),\n              formLink: goToRequstRidePage,\n              matchingResults: myRideRequestsInfo,\n              dashboardHeadings: RideRequestTableHeadings\n            },\n            two: {\n              dashboard: 'myRequests',\n              title: t('letsride:asset'),\n              formTitle: t('letsride:addAssetRequest'),\n              formLink: goToRequstAssetTransportPage,\n              matchingResults: myAssetRequestsInfo,\n              dashboardHeadings: AssetRequestTableHeadings\n            }\n          }\n        }\n        break\n      case menus.menu3:\n        this.renderedInfo = renderedMenus.sharedDetails\n        this.dashboardData = {\n          categories: {\n            one: {\n              dashboard: 'sharedDetails',\n              title: t('letsride:ride'),\n              formTitle: t('letsride:addShareRide'),\n              formLink: goToShareRidePage,\n              matchingResults: sharedRideInfo,\n              dashboardHeadings: SharedRideTableHeadings\n            },\n            two: {\n              dashboard: 'sharedDetails',\n              title: t('letsride:travelInfo'),\n              formTitle: t('letsride:addTravelInfo'),\n              formLink: goToShareTravelInfoPage,\n              matchingResults: sharedTravelInfo,\n              dashboardHeadings: SharedTravelInfoTableHeadings\n            }\n          }\n        }\n        break\n    }\n  }\n  render() {\n    const { t } = this.props\n    return (\n      <MainPageLayout src={imgSrc}>\n        <PageWrapper>\n          <MenuBar\n            menu={this.menu}\n            menu1Name={t('letsride:matchingResults')}\n            menu2Name={t('letsride:myRequests')}\n            menu3Name={t('letsride:sharedDetails')}\n            onClickMenu={this.onClickMenu}\n          />\n\n          {this.renderedInfo === renderedMenus.matchingResults && (\n            <RidesInfoDashboard dashboardData={this.dashboardData} />\n          )}\n          {this.renderedInfo === renderedMenus.myRequests && (\n            <RidesInfoDashboard dashboardData={this.dashboardData} />\n          )}\n          {this.renderedInfo === renderedMenus.sharedDetails && (\n            <RidesInfoDashboard dashboardData={this.dashboardData} />\n          )}\n        </PageWrapper>\n      </MainPageLayout>\n    )\n  }\n}\n\nexport default withTranslation('translation', { withRef: true })(\n  RideInfoMainPage\n)\n","import React, { Component } from 'react'\nimport { withTranslation, WithTranslation } from 'react-i18next'\nimport LoadingWrapperWithFailure from '../../../Common/components/LoadingWrapperWithFailure'\nimport { observer, inject } from 'mobx-react'\nimport { withRouter, RouteComponentProps } from 'react-router-dom'\nimport { RideInfoMainPage } from '../../components/RideInfoMainPage'\n\ninterface RideInfoMainRouteProps extends RouteComponentProps, WithTranslation {}\ninterface InjectedProps extends RideInfoMainRouteProps {}\n\n@inject('letsRideInfoStore')\n@observer\nclass RideInfoMainRoute extends Component<RideInfoMainRouteProps> {\n  getLetsRideInfoStore = () => {\n    return this.props['letsRideInfoStore']\n  }\n  renderSuccessUI = observer(() => {\n    const {\n      rideMatchingResultsInfo,\n      assetMatchingResultsInfo,\n      myRideRequestsInfo,\n      myAssetRequestsInfo,\n      sharedRideInfo,\n      sharedTravelInfo\n    } = this.getLetsRideInfoStore()\n    return (\n      <RideInfoMainPage\n        rideMatchingResultsInfo={rideMatchingResultsInfo}\n        assetMatchingResultsInfo={assetMatchingResultsInfo}\n        myRideRequestsInfo={myRideRequestsInfo}\n        myAssetRequestsInfo={myAssetRequestsInfo}\n        sharedRideInfo={sharedRideInfo}\n        sharedTravelInfo={sharedTravelInfo}\n      />\n    )\n  })\n  render() {\n    return (\n      <LoadingWrapperWithFailure\n        apiStatus={200}\n        apiError={''}\n        onRetryClick={() => {}}\n        renderSuccessUI={this.renderSuccessUI}\n      />\n    )\n  }\n}\n\nexport default withTranslation('translation', { withRef: true })(\n  withRouter(RideInfoMainRoute)\n)\n","import RideInfoMainRoute from './RideInfoMainRoute'\nexport default RideInfoMainRoute\n"],"sourceRoot":""}